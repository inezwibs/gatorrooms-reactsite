{"ast":null,"code":"import _objectSpread from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/homepage/home-page.js\";\nimport React, { Component } from 'react';\nimport { Drawer, withStyles, CssBaseline, TextField, InputAdornment, Grid, Paper, Toolbar, Typography, Hidden, IconButton, Button } from '@material-ui/core';\nimport { SearchOutlined as SearchIcon, ViewListOutlined as ViewListIcon, ViewColumnOutlined as ViewColumnIcon, Menu as MenuIcon, SortOutlined as SortIcon, Add as AddIcon } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport ListingCard from '../_global/component/listing-card';\nimport MenuPopUp from '../_global/component/appbar-menu';\nimport ListingDetail from '../_global/component/listing-detail';\nimport qs from 'qs';\nimport styles from './styles/home-page';\nimport _ from 'lodash';\nimport { getListings } from '../../api/listings.actions';\nimport DrawerItems from './component/drawer-items';\nvar SORT_ACTIONS = [{\n  id: 'newest',\n  label: 'Newest'\n}, {\n  id: 'cheapest',\n  label: 'Cheapest'\n}, {\n  id: 'bedrooms',\n  label: 'Bedrooms'\n}, {\n  id: 'distance',\n  label: 'SFSU Distance'\n}];\n\nvar FormRow = function FormRow(_ref) {\n  var listings = _ref.listings,\n      _ref$columnView = _ref.columnView,\n      columnView = _ref$columnView === void 0 ? true : _ref$columnView,\n      onListingPress = _ref.onListingPress;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, listings.map(function (value, index) {\n    return React.createElement(Grid, {\n      item: true,\n      lg: columnView ? 4 : 11,\n      md: 6,\n      sm: 12,\n      style: {\n        width: '100%'\n      },\n      key: \"grid-index-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ListingCard, {\n      listing: value,\n      onListingPress: onListingPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }));\n};\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n\n    _this._toggleSortMenu = function (event) {\n      var sortMenuVisible = _this.state.sortMenuVisible;\n      var state = {\n        sortMenuVisible: !sortMenuVisible\n      };\n\n      if (event) {\n        state['anchorEl'] = event.currentTarget;\n      }\n\n      _this.setState(state);\n    };\n\n    _this.onDrawerSelection = function () {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _this.setState({\n        query: query\n      }, function () {\n        return _this.getListings(query);\n      });\n    };\n\n    _this.getListings = function () {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var params = new URLSearchParams();\n      params.append('approved', true);\n\n      if (query.types && !_.isEmpty(query.types)) {\n        var selectedTypes = query.types;\n        selectedTypes.forEach(function (value) {\n          return params.append(\"type\", value);\n        });\n      }\n\n      if (query.beds && query.beds !== '0') {\n        params.append(\"beds\", query.beds);\n      }\n\n      if (query.sortBy) {\n        params.append(\"sortBy\", query.sortBy);\n      }\n\n      if (query.text) {\n        params.append(\"text\", encodeURI(query.text));\n      }\n\n      getListings(params, function (data) {\n        _this.setState({\n          listings: data || []\n        });\n      });\n    };\n\n    _this.displayListings = function (listings, columnView) {\n      var rows = [];\n\n      for (var i = 0; i < listings.length; i += 3) {\n        rows.push(React.createElement(Grid, {\n          container: true,\n          key: \"grid-container-\".concat(i + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(FormRow, {\n          listings: listings.slice(i, i + 3),\n          props: _this.props,\n          columnView: columnView,\n          onListingPress: function onListingPress(id) {\n            return _this.setState({\n              detailId: id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        })));\n      }\n\n      return rows;\n    };\n\n    _this.handleDrawerToggle = function () {\n      _this.setState(function (state) {\n        return {\n          mobileOpen: !state.mobileOpen\n        };\n      });\n    };\n\n    _this.onSearchClick = function () {\n      var _this$state = _this.state,\n          searchTxt = _this$state.searchTxt,\n          query = _this$state.query,\n          sortBy = _this$state.sortBy;\n\n      _this.getListings(_objectSpread({}, query, {\n        text: searchTxt,\n        sortBy: sortBy\n      }));\n    };\n\n    _this.handleSearchTxt = function (event) {\n      _this.setState({\n        searchTxt: event.target.value\n      });\n    };\n\n    _this.handleSortTxt = function (key) {\n      var _this$state2 = _this.state,\n          searchTxt = _this$state2.searchTxt,\n          query = _this$state2.query;\n\n      _this.setState({\n        sortBy: key,\n        sortMenuVisible: false\n      }, function () {\n        return _this.getListings(_objectSpread({}, query, {\n          text: searchTxt,\n          sortBy: key\n        }));\n      });\n    };\n\n    _this.state = {\n      listings: [],\n      mobileOpen: false,\n      columnView: true,\n      sortMenuVisible: false,\n      anchorEl: null,\n      query: {},\n      searchTxt: '',\n      sortBy: null,\n      detailId: -1\n    };\n    _this.getListings = _this.getListings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSearchClick = _this.onSearchClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSortTxt = _this.handleSortTxt.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearchTxt = _this.handleSearchTxt.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._toggleSortMenu = _this._toggleSortMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDrawerSelection = _this.onDrawerSelection.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getListings();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = qs.parse(this.props.location.search, {\n        ignoreQueryPrefix: true\n      });\n\n      if (params.refresh) {\n        // work-arround in order for a profile icon to show up after successfull\n        // login\n        window.history.pushState({}, document.title, \"/\");\n        window.location.reload();\n      } else if (params.logout) {\n        sessionStorage.removeItem('session');\n        window.history.pushState({}, document.title, \"/\");\n        window.location.reload();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state3 = this.state,\n          listings = _this$state3.listings,\n          columnView = _this$state3.columnView,\n          sortMenuVisible = _this$state3.sortMenuVisible,\n          anchorEl = _this$state3.anchorEl,\n          searchTxt = _this$state3.searchTxt,\n          detailId = _this$state3.detailId;\n      return React.createElement(Paper, {\n        className: classes.main,\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 3,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleDrawerToggle,\n        className: classes.menuButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })), React.createElement(Hidden, {\n        smUp: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        variant: \"temporary\",\n        open: this.state.mobileOpen,\n        onClose: this.handleDrawerToggle,\n        classes: {\n          paper: classes.drawerMobilePaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(DrawerItems, {\n        onDrawerSelectionChange: function onDrawerSelectionChange(payload) {\n          return _this2.onDrawerSelection(payload);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))), React.createElement(Hidden, {\n        xsDown: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"permanent\",\n        classes: {\n          paper: classes.drawerPaper\n        },\n        anchor: \"left\",\n        open: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(DrawerItems, {\n        onDrawerSelectionChange: function onDrawerSelectionChange(payload) {\n          _this2.getListings(payload);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        item: true,\n        lg: 9,\n        md: 9,\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.title,\n        variant: 'title',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Welcome to GaterRooms\"), React.createElement(Hidden, {\n        xsDown: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.searchSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Listing Search\",\n        inputProps: {\n          maxLength: 40\n        },\n        className: classes.searchTextField,\n        name: \"listingSearch\",\n        value: searchTxt,\n        onChange: this.handleSearchTxt,\n        placeholder: 'Enter city or state or zip code ',\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(SearchIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"primary\",\n        size: \"small\",\n        variant: \"contained\",\n        className: classes.searchButton,\n        onClick: this.onSearchClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Sort\",\n        label: 'Sort',\n        className: classes.iconButton,\n        onClick: this._toggleSortMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(SortIcon, {\n        fontSize: 'large',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), React.createElement(MenuPopUp, {\n        items: SORT_ACTIONS,\n        anchorEl: anchorEl,\n        open: sortMenuVisible,\n        onClose: this._toggleSortMenu,\n        onItemClick: function onItemClick(itemId) {\n          return _this2.handleSortTxt(itemId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          width: '250px'\n        },\n        className: classes.rightIcon,\n        component: Link,\n        to: '/profile/listings/new',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"New Listing\", React.createElement(AddIcon, {\n        className: classes.rightIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }))))), listings.length > 0 ? this.displayListings(listings, columnView) : React.createElement(Grid, {\n        container: true,\n        alignItems: 'center',\n        justify: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: 'display2',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"No Listings Found\")))), React.createElement(ListingDetail, {\n        open: detailId !== -1,\n        listingId: detailId,\n        onClose: function onClose() {\n          return _this2.setState({\n            detailId: -1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(HomePage);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/homepage/home-page.js"],"names":["React","Component","Drawer","withStyles","CssBaseline","TextField","InputAdornment","Grid","Paper","Toolbar","Typography","Hidden","IconButton","Button","SearchOutlined","SearchIcon","ViewListOutlined","ViewListIcon","ViewColumnOutlined","ViewColumnIcon","Menu","MenuIcon","SortOutlined","SortIcon","Add","AddIcon","Link","ListingCard","MenuPopUp","ListingDetail","qs","styles","_","getListings","DrawerItems","SORT_ACTIONS","id","label","FormRow","listings","columnView","onListingPress","map","value","index","width","HomePage","props","_toggleSortMenu","event","sortMenuVisible","state","currentTarget","setState","onDrawerSelection","query","params","URLSearchParams","append","types","isEmpty","selectedTypes","forEach","beds","sortBy","text","encodeURI","data","displayListings","rows","i","length","push","slice","detailId","handleDrawerToggle","mobileOpen","onSearchClick","searchTxt","handleSearchTxt","target","handleSortTxt","key","anchorEl","bind","parse","location","search","ignoreQueryPrefix","refresh","window","history","pushState","document","title","reload","logout","sessionStorage","removeItem","classes","main","menuButton","paper","drawerMobilePaper","payload","drawer","drawerPaper","searchSection","maxLength","searchTextField","startAdornment","searchButton","iconButton","itemId","rightIcon","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Drawer, withStyles, CssBaseline,\n  TextField, InputAdornment,\n  Grid, Paper, Toolbar, Typography,\n  Hidden, IconButton, Button\n} from '@material-ui/core';\nimport {\n  SearchOutlined as SearchIcon,\n  ViewListOutlined as ViewListIcon,\n  ViewColumnOutlined as ViewColumnIcon,\n  Menu as MenuIcon,\n  SortOutlined as SortIcon,\n  Add as AddIcon\n} from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport ListingCard from '../_global/component/listing-card';\nimport MenuPopUp from '../_global/component/appbar-menu';\nimport ListingDetail from '../_global/component/listing-detail';\nimport qs from 'qs';\nimport styles from './styles/home-page';\n\nimport _ from 'lodash';\nimport { getListings } from '../../api/listings.actions';\nimport DrawerItems from './component/drawer-items';\n\nconst SORT_ACTIONS = [\n  {\n    id: 'newest',\n    label: 'Newest'\n  },\n  {\n    id: 'cheapest',\n    label: 'Cheapest'\n  },\n  {\n    id: 'bedrooms',\n    label: 'Bedrooms'\n  },\n  {\n    id: 'distance',\n    label: 'SFSU Distance'\n  }\n];\n\nconst FormRow = ({ listings, columnView = true, onListingPress }) => {\n  return (\n    <React.Fragment>\n      {\n        listings.map((value, index) => (\n          <Grid\n            item\n            lg={columnView ? 4 : 11}\n            md={6}\n            sm={12}\n            style={{ width: '100%' }}\n            key={`grid-index-${index}`}\n          >\n            <ListingCard\n              listing={value}\n              onListingPress={onListingPress}\n            />\n          </Grid>\n        ))\n      }\n    </React.Fragment>\n  );\n}\n\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listings: [],\n      mobileOpen: false,\n      columnView: true,\n      sortMenuVisible: false,\n      anchorEl: null,\n      query: {},\n      searchTxt: '',\n      sortBy: null,\n      detailId: -1\n    };\n    this.getListings = this.getListings.bind(this);\n    this.onSearchClick = this.onSearchClick.bind(this);\n    this.handleSortTxt = this.handleSortTxt.bind(this);\n    this.handleSearchTxt = this.handleSearchTxt.bind(this);\n    this._toggleSortMenu = this._toggleSortMenu.bind(this);\n    this.onDrawerSelection = this.onDrawerSelection.bind(this);\n  }\n\n  _toggleSortMenu = (event) => {\n    const { sortMenuVisible } = this.state;\n    let state = { sortMenuVisible: !sortMenuVisible };\n    if (event) {\n      state['anchorEl'] = event.currentTarget;\n    }\n    this.setState(state)\n  }\n\n  componentWillMount() {\n    this.getListings();\n  }\n\n  componentDidMount() {\n    const params = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\n    if (params.refresh) {\n      // work-arround in order for a profile icon to show up after successfull\n      // login\n      window.history.pushState({}, document.title, \"/\");\n      window.location.reload();\n    } else if (params.logout) {\n      sessionStorage.removeItem('session');\n      window.history.pushState({}, document.title, \"/\");\n      window.location.reload();\n    }\n  }\n\n  onDrawerSelection = (query = {}) => {\n    this.setState({ query }, () => this.getListings(query));\n  }\n\n  getListings = (query = {}) => {\n    let params = new URLSearchParams();\n    params.append('approved', true);\n    if (query.types && !_.isEmpty(query.types)) {\n      let selectedTypes = query.types;\n      selectedTypes.forEach((value) => params.append(\"type\", value));\n    }\n    if (query.beds && query.beds !== '0') {\n      params.append(\"beds\", query.beds);\n    }\n    if (query.sortBy) {\n      params.append(\"sortBy\", query.sortBy);\n    }\n    if (query.text) {\n      params.append(\"text\", encodeURI(query.text));\n    }\n    getListings(params, (data) => {\n      this.setState({ listings: data || [] })\n    })\n  }\n\n  displayListings = (listings, columnView) => {\n    let rows = [];\n    for (let i = 0; i < listings.length; i += 3) {\n      rows.push(\n        <Grid\n          container\n          key={`grid-container-${i + 1}`}\n        >\n          <FormRow\n            listings={listings.slice(i, i + 3)}\n            props={this.props}\n            columnView={columnView}\n            onListingPress={(id) => this.setState({ detailId: id })}\n          />\n        </Grid>\n      );\n    }\n    return rows;\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  onSearchClick = () => {\n    const { searchTxt, query, sortBy } = this.state;\n    this.getListings({\n      ...query,\n      text: searchTxt,\n      sortBy: sortBy\n    })\n  }\n\n  handleSearchTxt = event => {\n    this.setState({ searchTxt: event.target.value });\n  };\n\n  handleSortTxt = key => {\n    const { searchTxt, query } = this.state;\n    this.setState({ sortBy: key, sortMenuVisible: false }, () => this.getListings({\n      ...query,\n      text: searchTxt,\n      sortBy: key\n    }));\n  };\n\n  render() {\n    const classes = this.props.classes;\n    const { listings, columnView, sortMenuVisible,\n      anchorEl, searchTxt, detailId } = this.state;\n\n    return (\n      <Paper className={classes.main} elevation={1}>\n        <Grid container style={{ width: '100%' }} >\n          <Grid item lg={2} md={3} sm={3} >\n            <CssBaseline />\n\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                variant=\"temporary\"\n                open={this.state.mobileOpen}\n                onClose={this.handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerMobilePaper,\n                }}\n              >\n                <DrawerItems\n                  onDrawerSelectionChange={(payload) => this.onDrawerSelection(payload)}\n                />\n              </Drawer>\n            </Hidden>\n\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                className={classes.drawer}\n                variant='permanent'\n                classes={{ paper: classes.drawerPaper }}\n                anchor=\"left\"\n                open\n              >\n                <DrawerItems\n                  onDrawerSelectionChange={(payload) => {\n                    this.getListings(payload);\n                  }}\n                />\n              </Drawer>\n            </Hidden>\n          </Grid>\n\n          <Grid item lg={9} md={9} sm={9} >\n            <Grid item lg={11}>\n              <Typography\n                className={classes.title}\n                variant={'title'}\n              >\n                Welcome to GaterRooms\n              </Typography>\n              <Hidden xsDown implementation=\"css\">\n                <Toolbar className={classes.searchSection}>\n                  <TextField\n                    label=\"Listing Search\"\n                    inputProps={{maxLength: 40}}\n                    className={classes.searchTextField}\n                    name=\"listingSearch\"\n                    value={searchTxt}\n                    onChange={this.handleSearchTxt}\n                    placeholder={'Enter city or state or zip code '}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                  <Button\n                    color=\"primary\"\n                    size=\"small\"\n                    variant=\"contained\"\n                    className={classes.searchButton}\n                    onClick={this.onSearchClick}\n                  >\n                    Search\n                </Button>\n                  <div>\n                    <IconButton\n                      aria-label=\"Sort\"\n                      label={'Sort'}\n                      className={classes.iconButton}\n                      onClick={this._toggleSortMenu}\n                    >\n                      <SortIcon fontSize={'large'} />\n                    </IconButton>\n                    <MenuPopUp\n                      items={SORT_ACTIONS}\n                      anchorEl={anchorEl}\n                      open={sortMenuVisible}\n                      onClose={this._toggleSortMenu}\n                      onItemClick={(itemId) => this.handleSortTxt(itemId)}\n                    />\n                  </div>\n                  {/* <IconButton\n                    aria-label=\"Grid-View\"\n                    className={classes.iconButton}\n                    onClick={() => this.setState({ columnView: !columnView })}\n                  >\n                    {columnView ?\n                      <ViewColumnIcon fontSize=\"large\" /> :\n                      <ViewListIcon fontSize=\"large\" />\n                    }\n                  </IconButton> */}\n                  <Button \n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ width: '250px' }}\n                    className={classes.rightIcon}\n                    component={Link}\n                    to={'/profile/listings/new'}\n                  >\n                    New Listing\n                    <AddIcon className={classes.rightIcon} />\n                  </Button>\n                </Toolbar>\n              </Hidden>\n            </Grid>\n            {\n              listings.length > 0 ?\n                this.displayListings(listings, columnView) :\n                <Grid\n                  container\n                  alignItems={'center'}\n                  justify={'center'}\n                >\n                  <Typography variant={'display2'} >\n                    No Listings Found\n                  </Typography>\n                </Grid>\n            }\n          </Grid>\n        </Grid>\n        <ListingDetail\n          open={detailId !== -1}\n          listingId={detailId}\n          onClose={() => this.setState({ detailId: -1 })}\n        />\n      </Paper>\n\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(HomePage);"]},"metadata":{},"sourceType":"module"}