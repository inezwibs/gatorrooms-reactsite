{"ast":null,"code":"import _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/homepage/home-page.js\";\nimport React, { Component } from 'react';\nimport { Drawer, withStyles, CssBaseline, Divider, Checkbox, Button, List, ListItem, ListItemText, ListSubheader, Grid } from '@material-ui/core';\nimport ListingCard from './component/listing-card';\nimport styles from './styles/home-page';\nimport _ from 'lodash';\nimport { getHouseTypes, getListings } from '../../api/listings.actions';\n\nvar FormRow = function FormRow(_ref) {\n  var listings = _ref.listings,\n      props = _ref.props;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, listings.map(function (value) {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(ListingCard, {\n      listing: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }));\n};\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n\n    _this.getListings = function () {\n      var selectedTypes = _this.state.selectedTypes;\n      var params = {};\n\n      if (!_.isEmpty(selectedTypes)) {\n        params = new URLSearchParams();\n        selectedTypes.forEach(function (value) {\n          return params.append(\"type\", value);\n        });\n      }\n\n      getListings(params, function (data) {\n        _this.setState({\n          listings: data || []\n        });\n      });\n    };\n\n    _this.getHousingTypes = function () {\n      var types = _this.state.types;\n      getHouseTypes(function (data) {\n        types = types.concat(data.map(function (value) {\n          return _.capitalize(value.type);\n        }));\n\n        _this.setState({\n          types: types\n        });\n      });\n    };\n\n    _this.selectHousingType = function (type) {\n      return function (event) {\n        if (type === 'All') {\n          _this.setState({\n            selectedTypes: []\n          });\n        } else {\n          var selectedTypes = _this.state.selectedTypes;\n          if (event.target.checked) selectedTypes.push(type);else _.remove(selectedTypes, function (i) {\n            return i === type;\n          });\n\n          _this.setState({\n            selectedTypes: selectedTypes\n          });\n        }\n      };\n    };\n\n    _this.isChecked = function (text) {\n      return text === 'All' && _.isEmpty(_this.state.selectedTypes) || _this.state.selectedTypes.includes(text);\n    };\n\n    _this.displayListings = function (listings) {\n      var rows = [];\n\n      for (var i = 0; i < listings.length; i += 3) {\n        rows.push(React.createElement(Grid, {\n          container: true,\n          item: true,\n          xs: 12,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(FormRow, {\n          listings: listings.slice(i, i + 3),\n          props: _this.props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })));\n      }\n\n      return rows;\n    };\n\n    _this.state = {\n      listings: [],\n      types: ['All'],\n      // All by default, other types will come from DB.\n      selectedTypes: [] // Empty means all\n\n    };\n    _this.isChecked = _this.isChecked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getListings = _this.getListings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getHousingTypes = _this.getHousingTypes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectHousingType = _this.selectHousingType.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getHousingTypes();\n      this.getListings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          types = _this$state.types,\n          listings = _this$state.listings;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"permanent\",\n        classes: {\n          paper: classes.drawerPaper\n        },\n        anchor: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(List, {\n        subheader: React.createElement(ListSubheader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \" Housing Types\"),\n        className: classes.subList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, types.map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: \"item-\".concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.isChecked(text),\n          onChange: _this2.selectHousingType(text),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      })), React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.getListings();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Update\"), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.displayListings(listings))));\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(HomePage);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/homepage/home-page.js"],"names":["React","Component","Drawer","withStyles","CssBaseline","Divider","Checkbox","Button","List","ListItem","ListItemText","ListSubheader","Grid","ListingCard","styles","_","getHouseTypes","getListings","FormRow","listings","props","map","value","HomePage","selectedTypes","state","params","isEmpty","URLSearchParams","forEach","append","data","setState","getHousingTypes","types","concat","capitalize","type","selectHousingType","event","target","checked","push","remove","i","isChecked","text","includes","displayListings","rows","length","slice","bind","classes","root","drawer","paper","drawerPaper","subList","index","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Drawer, withStyles, CssBaseline,\n  Divider, Checkbox, Button,\n  List, ListItem, ListItemText, ListSubheader,\n  Grid,\n} from '@material-ui/core';\nimport ListingCard from './component/listing-card';\nimport styles from './styles/home-page';\nimport _ from 'lodash';\nimport { getHouseTypes, getListings } from '../../api/listings.actions';\n\nconst FormRow = ({ listings, props }) => {\n  return (\n    <React.Fragment>\n      {\n        listings.map((value) => (\n          <Grid item xs={4}>\n            <ListingCard\n              listing={value}\n            />\n          </Grid>\n        ))\n      }  \n    </React.Fragment>\n  );\n}\n\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listings: [],\n      types: ['All'], // All by default, other types will come from DB.\n      selectedTypes: [] // Empty means all\n    };\n    this.isChecked = this.isChecked.bind(this);\n    this.getListings = this.getListings.bind(this);\n    this.getHousingTypes = this.getHousingTypes.bind(this);\n    this.selectHousingType = this.selectHousingType.bind(this);\n  }\n\n  componentWillMount() {\n    this.getHousingTypes();\n    this.getListings();\n  }\n\n  getListings = () => {\n    const { selectedTypes } = this.state;\n    let params = {};\n    if(!_.isEmpty(selectedTypes)){\n      params = new URLSearchParams();\n      selectedTypes.forEach((value) => params.append(\"type\", value));\n    }\n    getListings(params, (data) => {\n      this.setState({ listings: data || [] })\n    })\n  }\n\n  getHousingTypes = () => {\n    let { types } = this.state;\n    getHouseTypes((data) => {\n      types = types.concat(\n        data.map((value) => _.capitalize(value.type))\n      );\n      this.setState({ types: types })\n    })\n  }\n\n  selectHousingType = type => event => {\n    if (type === 'All') {\n      this.setState({ selectedTypes: [] });\n    } else {\n      let { selectedTypes } = this.state;\n      if (event.target.checked) selectedTypes.push(type);\n      else _.remove(selectedTypes, (i) => i === type);\n      this.setState({ selectedTypes: selectedTypes });\n    }\n  };\n\n  isChecked = (text) => {\n    return (text === 'All' && _.isEmpty(this.state.selectedTypes))\n      || this.state.selectedTypes.includes(text);\n  }\n\n  displayListings = (listings) => {\n    let rows = [];\n    for(let i = 0; i < listings.length; i += 3){\n      rows.push(\n        <Grid container item xs={12} spacing={24}>\n          <FormRow\n            listings={listings.slice(i, i + 3)}\n            props={this.props}\n          />\n        </Grid>\n      );\n    }\n    return rows;\n  } \n\n  render() {\n\n    const classes = this.props.classes;\n    const { types, listings } = this.state;\n\n    return (\n      <div className={classes.root}>\n          <Grid container spacing={8}>\n             <Grid item  xs={3}>\n                 <CssBaseline />      \n                 <Drawer\n                   className={classes.drawer}\n                   variant='permanent'\n                   classes={{ paper: classes.drawerPaper }}\n                   anchor=\"left\"\n                 >\n                 <List subheader={<ListSubheader> Housing Types</ListSubheader>} className={classes.subList}>\n                   {types.map((text, index) => (\n                     <ListItem button key={`item-${index}`}>\n                       <Checkbox\n                         checked={this.isChecked(text)}\n                         onChange={this.selectHousingType(text)}\n                       />\n                       <ListItemText primary={text} />\n                     </ListItem>\n                   ))}\n                   </List>\n                 <Button color=\"primary\" onClick={() => { this.getListings(); }}>\n                   Update\n                 </Button>\n                 <Divider />\n                 </Drawer> \n              </Grid>\n\n            <Grid item xs={9}>\n               {this.displayListings(listings)}\n            </Grid>\n          </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(HomePage);"]},"metadata":{},"sourceType":"module"}