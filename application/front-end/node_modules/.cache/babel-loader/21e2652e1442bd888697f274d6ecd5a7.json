{"ast":null,"code":"var _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/listing-card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Card, CardActionArea, CardContent, CardMedia, Badge, Typography } from '@material-ui/core';\nimport _ from 'lodash';\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      margin: 10\n    },\n    media: {\n      height: 200\n    },\n    cardcontent: {\n      height: 140\n    },\n    badge: {\n      margin: theme.spacing.unit * 2,\n      marginRight: theme.spacing.unit * 3\n    }\n  };\n};\n/**\n * A listing card which is used to show the image, date, and title of the listing.\n * Reused accross all the compoents.\n * @param {*} props - properties passed to the component\n */\n\n\nvar ListingCard = function ListingCard(props) {\n  var classes = props.classes,\n      listing = props.listing,\n      actions = props.actions,\n      onListingPress = props.onListingPress,\n      _props$displayBadge = props.displayBadge,\n      displayBadge = _props$displayBadge === void 0 ? false : _props$displayBadge;\n  var image = _.isArray(listing.images) && listing.images.length > 0 ? \"data:image/png;base64,\" + listing.images[0] : null;\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    onClick: function onClick() {\n      if (onListingPress) onListingPress(listing.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: image,\n    title: \"Listing Image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardcontent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, listing.title), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, listing.datePosted), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, listing.description), displayBadge && React.createElement(Badge, {\n    className: classes.badge,\n    badgeContent: listing.isApproved ? 'Approved' : 'Not Approved',\n    color: listing.isApproved ? 'primary' : 'secondary',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), actions);\n};\n\nListingCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  listing: PropTypes.object.isRequired,\n  actions: PropTypes.any\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(ListingCard);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/listing-card.js"],"names":["React","PropTypes","withStyles","Card","CardActionArea","CardContent","CardMedia","Badge","Typography","_","styles","theme","card","margin","media","height","cardcontent","badge","spacing","unit","marginRight","ListingCard","props","classes","listing","actions","onListingPress","displayBadge","image","isArray","images","length","id","title","datePosted","description","isApproved","propTypes","object","isRequired","any","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Card, CardActionArea,\n         CardContent, CardMedia, Badge, Typography\n} from '@material-ui/core';\nimport _ from 'lodash';\n\nconst styles = theme => ({\n  card: {\n    margin: 10\n  },\n  media: {\n    height: 200,\n  },\n  cardcontent: {\n    height: 140,\n  },\n  badge: {\n    margin: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 3,\n  },\n});\n\n/**\n * A listing card which is used to show the image, date, and title of the listing.\n * Reused accross all the compoents.\n * @param {*} props - properties passed to the component\n */\nconst ListingCard = (props) => {\n  const { classes, listing, actions, onListingPress, displayBadge = false } = props;\n  const image = _.isArray(listing.images) && listing.images.length > 0 ? \n      \"data:image/png;base64,\" + listing.images[0] :\n      null;\n       \n  return (\n    <Card className={classes.card}>\n      <CardActionArea\n        onClick={() => {\n          if(onListingPress) onListingPress(listing.id);\n        }}\n      >\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title={\"Listing Image\"}\n        />\n        <CardContent className={classes.cardcontent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {listing.title}\n          </Typography>\n\n          <Typography component=\"p\">\n            {listing.datePosted}\n          </Typography>\n          <Typography component=\"p\">\n            {listing.description}\n          </Typography>\n          {\n            displayBadge && (\n              <Badge\n                className={classes.badge}\n                badgeContent={listing.isApproved ? 'Approved' : 'Not Approved'}\n                color={listing.isApproved ? 'primary' : 'secondary'}\n              />\n            )\n          }\n        </CardContent>\n      </CardActionArea>\n      {actions}\n    </Card>\n  );\n}\n\nListingCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  listing: PropTypes.object.isRequired,\n  actions: PropTypes.any\n};\n\nexport default withStyles(styles, { withTheme: true })(ListingCard);"]},"metadata":{},"sourceType":"module"}