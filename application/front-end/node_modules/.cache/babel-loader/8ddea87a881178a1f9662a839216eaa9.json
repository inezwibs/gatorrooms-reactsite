{"ast":null,"code":"import _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/listing-detail.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Dialog, AppBar, Toolbar, IconButton, Typography, Slide, Grid, Button } from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport MapView from '../../googlemaps/maps';\nimport LandloardContactDialog from '../../_global/component/message-dialog';\nimport { checkSession } from '../../../api/user.actions';\nimport { getListing } from '../../../api/listings.actions'; // import ReactImages from 'react-images'; // doesn't work for some reason\n\n/**\n * A dialog which pops up to display the listing information\n */\n\nvar Transition = function Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nvar styles = function styles(theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    content: {\n      flex: 1\n    },\n    image: {\n      padding: 10,\n      width: '100%',\n      height: theme.spacing.unit * 50\n    },\n    map: {\n      padding: 10,\n      width: '200px',\n      height: '200px'\n    },\n    infoContainer: {\n      padding: 10\n    },\n    txtContainer: {\n      paddingLeft: 5\n    },\n    contactButton: {\n      padding: theme.spacing.unit * 1\n    }\n  };\n};\n\nvar ListingDetailDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListingDetailDialog, _Component);\n\n  function ListingDetailDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ListingDetailDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListingDetailDialog).call(this, props));\n\n    _this._checkAuthentication = function () {\n      var session = sessionStorage.getItem('session');\n\n      if (session && JSON.parse(session).token) {\n        // validate session\n        var token = JSON.parse(session).token;\n        checkSession(token, function (_) {\n          return _this.setState({\n            isLoggedIn: true\n          });\n        }, function () {\n          return _this.setState({\n            isLoggedIn: false\n          });\n        });\n      } else {\n        _this.setState({\n          isLoggedIn: false\n        });\n      }\n    };\n\n    _this._updateImgContainerState = function (key, value) {\n      var imageContainer = _this.state.imageContainer;\n      imageContainer[key] = value;\n\n      _this.setState({\n        imageContainer: imageContainer\n      });\n    };\n\n    _this._contactLandloard = function () {\n      var _this$state = _this.state,\n          isLoggedIn = _this$state.isLoggedIn,\n          contactDialogOpen = _this$state.contactDialogOpen;\n\n      if (isLoggedIn) {\n        _this.setState({\n          contactDialogOpen: !contactDialogOpen\n        });\n      } else {\n        alert('You need to log in order to contact landloard.');\n      }\n    };\n\n    _this.state = {\n      listing: {\n        images: []\n      },\n      imageContainer: {\n        open: false\n      },\n      isLoggedIn: false,\n      contactDialogOpen: false\n    };\n    _this._contactLandloard = _this._contactLandloard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._checkAuthentication = _this._checkAuthentication.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._updateImgContainerState = _this._updateImgContainerState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListingDetailDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkAuthentication();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.listingId !== this.props.listingId && this.props.listingId !== -1) {\n        getListing(this.props.listingId, function (data) {\n          _this2.setState({\n            listing: data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          listing = _this$state2.listing,\n          contactDialogOpen = _this$state2.contactDialogOpen;\n      var _this$props = this.props,\n          open = _this$props.open,\n          onClose = _this$props.onClose,\n          classes = _this$props.classes;\n      var images = listing.images.map(function (img) {\n        return {\n          src: \"data:image/png;base64,\".concat(img)\n        };\n      });\n      return React.createElement(Dialog, {\n        fullScreen: true,\n        open: open,\n        onClose: onClose,\n        TransitionComponent: Transition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'row',\n        justify: 'flex-end',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: 'inherit',\n        onClick: onClose,\n        \"aria-label\": 'Close',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.image,\n        src: images.length > 0 ? images[0].src : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(MapView, {\n        mapContainer: classes.map,\n        address: \"\".concat(listing.line1, \" \").concat(listing.city, \" \").concat(listing.state, \" \").concat(listing.zipCode),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Listing Info\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"$\", listing.price)), React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"| \", listing.bedrooms, \" bd\")), React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"| \", listing.bathrooms, \" ba\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\".concat(listing.line1, \" \").concat(listing.city, \" \").concat(listing.state, \" \").concat(listing.zipCode))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Date Posted: \", listing.datePosted)))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'row',\n        justify: 'flex-start',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"small\",\n        variant: \"contained\",\n        className: classes.contactButton,\n        onClick: function onClick() {\n          return _this3._contactLandloard();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Contact Landloard\")))))))), React.createElement(LandloardContactDialog, {\n        open: contactDialogOpen,\n        onClose: function onClose() {\n          return _this3.setState({\n            contactDialogOpen: !contactDialogOpen\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ListingDetailDialog;\n}(Component);\n\nListingDetailDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  listingId: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(ListingDetailDialog);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/listing-detail.js"],"names":["React","Component","PropTypes","withStyles","Dialog","AppBar","Toolbar","IconButton","Typography","Slide","Grid","Button","Close","CloseIcon","MapView","LandloardContactDialog","checkSession","getListing","Transition","props","styles","theme","appBar","position","content","flex","image","padding","width","height","spacing","unit","map","infoContainer","txtContainer","paddingLeft","contactButton","ListingDetailDialog","_checkAuthentication","session","sessionStorage","getItem","JSON","parse","token","_","setState","isLoggedIn","_updateImgContainerState","key","value","imageContainer","state","_contactLandloard","contactDialogOpen","alert","listing","images","open","bind","prevProps","listingId","data","onClose","classes","img","src","length","line1","city","zipCode","price","bedrooms","bathrooms","datePosted","propTypes","bool","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    withStyles,Dialog, AppBar,\n    Toolbar, IconButton, Typography,\n    Slide, Grid, Button\n} from '@material-ui/core';\nimport {\n    Close as CloseIcon,\n} from '@material-ui/icons';\nimport MapView from '../../googlemaps/maps';\nimport LandloardContactDialog from '../../_global/component/message-dialog';\nimport { checkSession } from '../../../api/user.actions';\nimport { getListing } from '../../../api/listings.actions';\n// import ReactImages from 'react-images'; // doesn't work for some reason\n\n/**\n * A dialog which pops up to display the listing information\n */\nconst Transition = (props) => {\n    return <Slide direction=\"up\" {...props} />\n}\n\nconst styles = theme => ({\n    appBar: {\n        position: 'relative'\n    },\n    content: {\n        flex: 1\n    },\n    image: {\n        padding: 10,\n        width: '100%',\n        height: theme.spacing.unit * 50,\n    },\n    map: {\n        padding: 10,\n        width: '200px',\n        height: '200px',\n    },\n    infoContainer: {\n        padding: 10\n    },\n    txtContainer: {\n        paddingLeft: 5\n    },\n    contactButton: {\n        padding: theme.spacing.unit*1,\n    }\n});\n\nclass ListingDetailDialog extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            listing: {\n                images: []\n            },\n            imageContainer: {\n                open: false\n            },\n            isLoggedIn: false,\n            contactDialogOpen: false\n        }\n        this._contactLandloard = this._contactLandloard.bind(this);\n        this._checkAuthentication = this._checkAuthentication.bind(this);\n        this._updateImgContainerState = this._updateImgContainerState.bind(this);\n    }\n\n    componentDidMount(){\n        this._checkAuthentication()\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.listingId !== this.props.listingId\n            && this.props.listingId !== -1){\n            getListing(this.props.listingId, (data) => {\n                this.setState({ listing: data });\n            });\n        }\n    }\n\n    _checkAuthentication = () => {\n        const session = sessionStorage.getItem('session')\n            if(session && JSON.parse(session).token){\n                // validate session\n                const token = JSON.parse(session).token;\n          checkSession(token, \n            (_) => this.setState({ isLoggedIn: true }),\n            () => this.setState({ isLoggedIn: false }));\n            }else{\n                this.setState({ isLoggedIn: false });\n            }\n      }\n\n    _updateImgContainerState = (key, value) => {\n        let { imageContainer } = this.state;\n        imageContainer[key] = value;\n        this.setState({ imageContainer });\n    }\n\n    _contactLandloard = () => {\n        const { isLoggedIn, contactDialogOpen } = this.state;\n        if(isLoggedIn){\n            this.setState({ contactDialogOpen: !contactDialogOpen })\n        }else{\n            alert('You need to log in order to contact landloard.')\n        }\n    }\n\n    render(){\n        \n        const { listing, contactDialogOpen } = this.state;\n        const { open, onClose, classes } = this.props;\n\n        const images = listing\n                .images\n                .map((img) => ({ src: `data:image/png;base64,${img}` }));\n        \n        return (\n            <Dialog\n                fullScreen\n                open={open}\n                onClose={onClose}\n                TransitionComponent={Transition}\n            >\n                <AppBar className={classes.appBar} >\n                    <Grid\n                        container\n                        direction={'row'}\n                        justify={'flex-end'}\n                    >\n                        <Toolbar>\n                            <IconButton\n                                color={'inherit'}\n                                onClick={onClose}\n                                aria-label={'Close'}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </Toolbar>\n                    </Grid>\n                </AppBar>\n                <div className={classes.content} >\n                    <Grid container style={{ width: '100%' }} >\n                        <Grid item lg={6} md={6} sm={6} >\n                            <img\n                                className={classes.image}\n                                src={images.length > 0 ? images[0].src : null}\n                            />\n                            <MapView\n                                mapContainer={classes.map}\n                                address={`${listing.line1} ${listing.city} ${listing.state} ${listing.zipCode}`}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} >\n                            <div className={classes.infoContainer} >\n                                <Grid\n                                    container\n                                    direction={'row'}\n                                >   \n                                    <Grid item xs={12}>\n                                        <Grid container alignItems={'center'} >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h5\" >Listing Info</Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems={'center'} >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h6\" >${listing.price}</Typography>\n                                            </div>\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant='subtitle2' >| {listing.bedrooms} bd</Typography>\n                                            </div>\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"subtitle2\" >| {listing.bathrooms} ba</Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h6\" >\n                                                    {`${listing.line1} ${listing.city} ${listing.state} ${listing.zipCode}`}\n                                                </Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>  \n                                    <Grid item xs={12}>\n                                        <Grid container >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h6\" >Date Posted: {listing.datePosted}</Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>   \n                                    <Grid item xs={12}>\n                                        <Grid \n                                            container\n                                            direction={'row'}\n                                            justify={'flex-start'}\n                                        >\n                                            <Button\n                                                color=\"primary\"\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                className={classes.contactButton}\n                                                onClick={() => this._contactLandloard()}\n                                            >\n                                                Contact Landloard\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <LandloardContactDialog\n                    open={contactDialogOpen}\n                    onClose={() => this.setState({ contactDialogOpen: !contactDialogOpen })}\n                />\n            </Dialog>\n        )\n    }\n}\n\nListingDetailDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    listingId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles, )(ListingDetailDialog);"]},"metadata":{},"sourceType":"module"}