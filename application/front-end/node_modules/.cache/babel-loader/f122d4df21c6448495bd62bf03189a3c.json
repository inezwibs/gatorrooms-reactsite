{"ast":null,"code":"import axios from \"axios\";\nimport api_config from './config/api.config';\nexport var getListings = function getListings(params, handleResponse) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  axios({\n    method: 'get',\n    url: \"http://\".concat(api_config.environment, \"/listings\"),\n    params: params,\n    headers: headers\n  }).then(function (res) {\n    handleResponse(res.data);\n  });\n};\nexport var getListing = function getListing(id, handleResponse) {\n  axios({\n    method: 'get',\n    url: \"http://\".concat(api_config.environment, \"/listings/one/\").concat(id)\n  }).then(function (res) {\n    handleResponse(res.data);\n  });\n};\nexport var getHouseTypes = function getHouseTypes(handleResponse) {\n  axios.get(\"http://\".concat(api_config.environment, \"/listings/types\")).then(function (res) {\n    handleResponse(res.data);\n  });\n};\nexport var createPosting = function createPosting(body, handleResponse) {\n  var session = JSON.parse(sessionStorage.getItem('session'));\n  axios({\n    method: 'post',\n    url: \"http://\".concat(api_config.environment, \"/listings/new\"),\n    data: body,\n    headers: {\n      'Session': session.token\n    }\n  }).then(function (res) {\n    handleResponse();\n  });\n};\nexport var approveListing = function approveListing(id, approve, handleResponse) {\n  var session = JSON.parse(sessionStorage.getItem('session'));\n  axios({\n    method: 'put',\n    url: \"http://\".concat(api_config.environment, \"/listings/one/\").concat(id),\n    headers: {\n      'Session': session.token\n    },\n    params: {\n      approve: approve\n    }\n  }).then(function (res) {\n    handleResponse();\n  });\n};\nexport var deleteListing = function deleteListing(id, onSuccess) {\n  var session = JSON.parse(sessionStorage.getItem('session'));\n  axios({\n    method: 'delete',\n    url: \"http://\".concat(api_config.environment, \"/listings/one/\").concat(id),\n    headers: {\n      'Session': session.token\n    }\n  }).then(onSuccess);\n};","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/api/listings.actions.js"],"names":["axios","api_config","getListings","params","handleResponse","headers","method","url","environment","then","res","data","getListing","id","getHouseTypes","get","createPosting","body","session","JSON","parse","sessionStorage","getItem","token","approveListing","approve","deleteListing","onSuccess"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,cAAT,EAA0C;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACnEL,EAAAA,KAAK,CAAC;AACJM,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,mBAAYN,UAAU,CAACO,WAAvB,cAFC;AAGJL,IAAAA,MAAM,EAAEA,MAHJ;AAIJE,IAAAA,OAAO,EAAEA;AAJL,GAAD,CAAL,CAKGI,IALH,CAKQ,UAACC,GAAD,EAAS;AACfN,IAAAA,cAAc,CAACM,GAAG,CAACC,IAAL,CAAd;AACD,GAPD;AAQD,CATM;AAWP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKT,cAAL,EAAwB;AAChDJ,EAAAA,KAAK,CAAC;AACJM,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,mBAAYN,UAAU,CAACO,WAAvB,2BAAmDK,EAAnD;AAFC,GAAD,CAAL,CAGGJ,IAHH,CAGQ,UAACC,GAAD,EAAS;AACfN,IAAAA,cAAc,CAACM,GAAG,CAACC,IAAL,CAAd;AACD,GALD;AAMD,CAPM;AASP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACV,cAAD,EAAoB;AAC/CJ,EAAAA,KAAK,CAACe,GAAN,kBAAoBd,UAAU,CAACO,WAA/B,sBACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACbN,IAAAA,cAAc,CAACM,GAAG,CAACC,IAAL,CAAd;AACD,GAHH;AAID,CALM;AAOP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOb,cAAP,EAA0B;AACrD,MAAIc,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAd;AACAtB,EAAAA,KAAK,CAAC;AACJM,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,GAAG,mBAAYN,UAAU,CAACO,WAAvB,kBAFC;AAGJG,IAAAA,IAAI,EAAEM,IAHF;AAIJZ,IAAAA,OAAO,EAAE;AACP,iBAAWa,OAAO,CAACK;AADZ;AAJL,GAAD,CAAL,CAOGd,IAPH,CAOQ,UAACC,GAAD,EAAS;AACfN,IAAAA,cAAc;AACf,GATD;AAUD,CAZM;AAcP,OAAO,IAAMoB,cAAc,GAAG,SAAjBA,cAAiB,CAACX,EAAD,EAAKY,OAAL,EAAcrB,cAAd,EAAiC;AAC7D,MAAIc,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAd;AACAtB,EAAAA,KAAK,CAAC;AACJM,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,mBAAYN,UAAU,CAACO,WAAvB,2BAAmDK,EAAnD,CAFC;AAGJR,IAAAA,OAAO,EAAE;AACP,iBAAWa,OAAO,CAACK;AADZ,KAHL;AAMJpB,IAAAA,MAAM,EAAE;AACNsB,MAAAA,OAAO,EAAEA;AADH;AANJ,GAAD,CAAL,CASGhB,IATH,CASQ,UAACC,GAAD,EAAS;AACfN,IAAAA,cAAc;AACf,GAXD;AAYD,CAdM;AAgBP,OAAO,IAAMsB,aAAa,GAAG,SAAhBA,aAAgB,CAACb,EAAD,EAAKc,SAAL,EAAmB;AAC9C,MAAIT,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAd;AACAtB,EAAAA,KAAK,CAAC;AACJM,IAAAA,MAAM,EAAE,QADJ;AAEJC,IAAAA,GAAG,mBAAYN,UAAU,CAACO,WAAvB,2BAAmDK,EAAnD,CAFC;AAGJR,IAAAA,OAAO,EAAE;AACP,iBAAWa,OAAO,CAACK;AADZ;AAHL,GAAD,CAAL,CAMGd,IANH,CAMQkB,SANR;AAOD,CATM","sourcesContent":["import axios from \"axios\";\nimport api_config from './config/api.config';\n\nexport const getListings = (params, handleResponse, headers = {}) => {\n  axios({\n    method: 'get',\n    url: `http://${api_config.environment}/listings`,\n    params: params,\n    headers: headers\n  }).then((res) => {\n    handleResponse(res.data);\n  });\n};\n\nexport const getListing = (id, handleResponse) => {\n  axios({\n    method: 'get',\n    url: `http://${api_config.environment}/listings/one/${id}`,\n  }).then((res) => {\n    handleResponse(res.data);\n  });\n};\n\nexport const getHouseTypes = (handleResponse) => {\n  axios.get(`http://${api_config.environment}/listings/types`)\n    .then((res) => {\n      handleResponse(res.data);\n    });\n};\n\nexport const createPosting = (body, handleResponse) => {\n  let session = JSON.parse(sessionStorage.getItem('session'))\n  axios({\n    method: 'post',\n    url: `http://${api_config.environment}/listings/new`,\n    data: body,\n    headers: {\n      'Session': session.token\n    },\n  }).then((res) => {\n    handleResponse();\n  });\n};\n\nexport const approveListing = (id, approve, handleResponse) => {\n  let session = JSON.parse(sessionStorage.getItem('session'))\n  axios({\n    method: 'put',\n    url: `http://${api_config.environment}/listings/one/${id}`,\n    headers: {\n      'Session': session.token\n    },\n    params: {\n      approve: approve\n    }\n  }).then((res) => {\n    handleResponse();\n  });\n}\n\nexport const deleteListing = (id, onSuccess) => {\n  let session = JSON.parse(sessionStorage.getItem('session'))\n  axios({\n    method: 'delete',\n    url: `http://${api_config.environment}/listings/one/${id}`,\n    headers: {\n      'Session': session.token\n    }\n  }).then(onSuccess);\n}\n"]},"metadata":{},"sourceType":"module"}