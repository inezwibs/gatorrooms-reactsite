{"ast":null,"code":"import axios from \"axios\";\nimport api_config from './config/api.config';\nexport var getInbox = function getInbox(handleResponse) {\n  var sessionToken = JSON.parse(sessionStorage.getItem('session')).token;\n  axios({\n    method: 'get',\n    url: \"http://\".concat(api_config.environment, \"/messages/inbox\"),\n    headers: {\n      'Session': sessionToken\n    }\n  }).then(function (res) {\n    //http response returns array of json chat objects\n    handleResponse(res.data);\n  });\n};\nexport var getChat = function getChat(id, handleResponse) {\n  var sessionToken = JSON.parse(sessionStorage.getItem('session')).token;\n  axios({\n    method: 'get',\n    url: \"http://\".concat(api_config.environment, \"/messages/one/\").concat(id),\n    headers: {\n      'Session': sessionToken\n    }\n  }).then(function (res) {\n    //http response returns array of json messages  \n    handleResponse(res.data);\n  });\n};\nexport var deleteChat = function deleteChat(id, handleResponse) {\n  var sessionToken = JSON.parse(sessionStorage.getItem('session')).token;\n  axios({\n    method: 'delete',\n    url: \"http://\".concat(api_config.environment, \"/messages/trash/\").concat(id),\n    headers: {\n      'Session': sessionToken\n    }\n  }).then(function () {\n    handleResponse();\n  });\n};\nexport var validateContact = function validateContact(listingId, handleResponse) {\n  var sessionToken = JSON.parse(sessionStorage.getItem('session')).token;\n  axios({\n    method: 'get',\n    url: \"http://\".concat(api_config.environment, \"/messages/notContacted/\").concat(listingId),\n    headers: {\n      'Session': sessionToken\n    }\n  }).then(function (res) {\n    handleResponse(res.data.valid);\n  });\n};\nexport var sendMessage = function sendMessage(messagePacket, handleResponse) {\n  var sessionToken = JSON.parse(sessionStorage.getItem('session')).token;\n  axios({\n    method: 'post',\n    url: \"http://\".concat(api_config.environment, \"/messages/send\"),\n    data: {\n      'messagePacket': messagePacket\n    },\n    headers: {\n      'Session': sessionToken\n    }\n  }).then(function (res) {\n    handleResponse();\n  });\n};\nexport var sendNewMessage = function sendNewMessage(messagePacket, handleResponse) {\n  var sessionToken = JSON.parse(sessionStorage.getItem('session')).token;\n  axios({\n    method: 'post',\n    url: \"http://\".concat(api_config.environment, \"/messages/new\"),\n    data: {\n      'messagePacket': messagePacket\n    },\n    headers: {\n      'Session': sessionToken\n    }\n  }).then(function (res) {\n    handleResponse();\n  });\n};","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/api/message.actions.js"],"names":["axios","api_config","getInbox","handleResponse","sessionToken","JSON","parse","sessionStorage","getItem","token","method","url","environment","headers","then","res","data","getChat","id","deleteChat","validateContact","listingId","valid","sendMessage","messagePacket","sendNewMessage"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport api_config from './config/api.config';\n\n\nexport const getInbox = (handleResponse) => {\n  let sessionToken = JSON.parse(sessionStorage.getItem('session')).token\n\n   axios({\n      method: 'get',\n      url: `http://${api_config.environment}/messages/inbox`,\n      headers:{\n      \t'Session': sessionToken\n      },\n   }).then((res) => {\n   \t //http response returns array of json chat objects\n   \t handleResponse(res.data);\n   });\n};\n\nexport const getChat = (id,handleResponse) => {\n  let sessionToken = JSON.parse(sessionStorage.getItem('session')).token\n   axios({\n      method: 'get',\n      url: `http://${api_config.environment}/messages/one/${id}`,\n      headers:{\n        'Session': sessionToken\n      },\n   }).then((res) => {  \n   //http response returns array of json messages  \n     handleResponse(res.data);\n   });\n};\n\nexport const deleteChat = (id, handleResponse)=>{\n  let sessionToken = JSON.parse(sessionStorage.getItem('session')).token\n   axios({\n     method: 'delete',\n     url: `http://${api_config.environment}/messages/trash/${id}`,\n     headers:{\n         'Session': sessionToken,\n     },\n   }).then(() => {\n     handleResponse();\n   });\n};\n\nexport const validateContact = (listingId, handleResponse) =>{\n  let sessionToken = JSON.parse(sessionStorage.getItem('session')).token\n\n   axios({\n      method: 'get',\n      url: `http://${api_config.environment}/messages/notContacted/${listingId}`,\n      headers:{\n       'Session': sessionToken,\n      },\n   \n   }).then((res) => {  \n       handleResponse(res.data.valid);\n   });\n};\n\n\nexport const sendMessage = (messagePacket, handleResponse) => {\n  let sessionToken = JSON.parse(sessionStorage.getItem('session')).token\n\n   axios({\n      method: 'post',\n      url: `http://${api_config.environment}/messages/send`,\n      data:{\n         'messagePacket': messagePacket,\n      },\n      headers:{\n         'Session': sessionToken,\n      },\n   \n   }).then((res) => {       \n       handleResponse();\n   });\n};\n\nexport const sendNewMessage = (messagePacket, handleResponse) => {\n\n  let sessionToken = JSON.parse(sessionStorage.getItem('session')).token\n   axios({\n      method: 'post',\n      url: `http://${api_config.environment}/messages/new`,\n      data:{\n         'messagePacket': messagePacket,\n      },\n      headers:{\n         'Session': sessionToken,\n      },\n   }).then((res) => {       \n       handleResponse();\n   });\n};\n"]},"metadata":{},"sourceType":"module"}