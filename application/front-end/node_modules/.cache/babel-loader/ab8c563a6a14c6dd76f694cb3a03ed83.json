{"ast":null,"code":"import _defineProperty from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/listing/new-listing.js\";\nimport React, { Component } from 'react';\nimport { TextField, FormGroup, FormControl, Paper, withStyles, Typography, Grid, Divider, InputLabel, Select, OutlinedInput, Card, CardMedia, IconButton, GridListTileBar, GridList, GridListTile } from '@material-ui/core';\nimport styles from './styles/new-listing';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom'; //use axios for posting \n\nimport { createPosting } from '../../api/listings.actions'; //image preview stuff\n\nimport DeleteForeverSharpIcon from '@material-ui/icons/DeleteForeverSharp'; // https://stackoverflow.com/questions/36280818/how-to-convert-file-to-base64-in-javascript\n\nvar NewListing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewListing, _Component);\n\n  function NewListing(props) {\n    var _this;\n\n    _classCallCheck(this, NewListing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewListing).call(this, props));\n\n    _this.addFile = function (event) {\n      var form = _this.state.form;\n      var files = Array.from(event.target.files);\n\n      for (var i = 0; i < files.length; i++) {\n        _this.state.imagesPreviews.push(URL.createObjectURL(files[i]));\n\n        _this.getBase64(files[i]).then(function (data) {\n          var encoded = data.replace(/^data:(.*;base64,)?/, '');\n          form.images.push(encoded);\n        });\n      }\n\n      _this.setState({\n        form: form\n      });\n    };\n\n    _this.inputIsValid = function (name, value) {\n      if (['price', 'zipcode'].includes(name.toLowerCase())) {\n        if (/[a-zA-Z]/.test(value)) {\n          alert(\"\".concat(name, \" only contains letters\"));\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    _this.handleFormChange = function (name) {\n      return function (_ref) {\n        var value = _ref.target.value;\n\n        _this.setState({\n          form: _objectSpread({}, _this.state.form, _defineProperty({}, name, value))\n        });\n\n        if (!_this.inputIsValid(name, value)) {\n          _this.setState({\n            form: _objectSpread({}, _this.state.form, _defineProperty({}, name, value.slice(0, value.length - 1)))\n          });\n        }\n      };\n    };\n\n    _this.handleAddressChange = function (name) {\n      return function (_ref2) {\n        var value = _ref2.target.value;\n        var form = _this.state.form;\n        form.address[name] = value;\n\n        _this.setState({\n          form: form\n        });\n\n        if (!_this.inputIsValid(name, value)) {\n          form.address[name] = value.slice(0, value.length - 1);\n\n          _this.setState({\n            form: form\n          });\n        }\n      };\n    };\n\n    _this.getBase64 = function (file) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = function () {\n          return resolve(reader.result);\n        };\n\n        reader.onerror = function (error) {\n          return reject(error);\n        };\n      });\n    };\n\n    _this.onSubmitClick = function () {\n      var form = _this.state.form;\n      Object.keys(form).forEach(function (value) {\n        console.log(form[value]);\n      }); // if(Object.keys(form).length != 8){\n      //  alert('you must fill out all form fields');\n      // }else{\n\n      createPosting(form, function () {\n        //if response is good then redirect-render new page\n        _this.setState({\n          submitSuccess: true\n        });\n      }); // }\n    };\n\n    _this.onResetClick = function () {\n      _this.setState({\n        form: {\n          address: {},\n          images: []\n        },\n        imagesPreviews: []\n      });\n    };\n\n    _this.removeImage = function (imageIndex) {\n      _this.state.imagesPreviews.splice(imageIndex, 1);\n\n      console.log(_this.state.imagesPreviews);\n\n      _this.forceUpdate();\n    };\n\n    _this.state = {\n      form: {\n        images: [],\n        address: {}\n      },\n      imagesPreviews: [],\n      submitSuccess: false\n    };\n    _this.addFile = _this.addFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onResetClick = _this.onResetClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitClick = _this.onSubmitClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormChange = _this.handleFormChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddressChange = _this.handleAddressChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.inputIsValid = _this.inputIsValid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeImage = _this.removeImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewListing, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      var _this$state = this.state,\n          form = _this$state.form,\n          submitSuccess = _this$state.submitSuccess;\n      var classes = this.props.classes;\n      var previews = this.state.imagesPreviews.map(function (image, imageIndex) {\n        var index = parseInt(imageIndex);\n        return React.createElement(GridListTile, {\n          key: \"preview image \" + index,\n          cols: 1,\n          style: {\n            height: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: classes.media,\n          image: image,\n          alt: \"previewImage\" + index,\n          title: \"Uploaded Image \" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        })), React.createElement(GridListTileBar, {\n          actionIcon: React.createElement(IconButton, {\n            className: classes.deletePreview,\n            onClick: function onClick() {\n              return _this2.removeImage(imageIndex);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, React.createElement(DeleteForeverSharpIcon, {\n            className: classes.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }));\n      });\n\n      if (submitSuccess) {\n        return React.createElement(Redirect, {\n          to: '/profile/listings',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Create New Listing\"), React.createElement(FormGroup, {\n        className: classes.formGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Title\",\n        value: form.title,\n        onChange: this.handleFormChange('title'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Price\",\n        value: form.price,\n        onChange: this.handleFormChange('price'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Address\",\n        value: form.address.line1,\n        onChange: this.handleAddressChange('line1'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"City\",\n        value: form.address.city,\n        onChange: this.handleAddressChange('city'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"State\",\n        value: form.address.state,\n        onChange: this.handleAddressChange('state'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Zip\",\n        value: form.address.zipCode,\n        onChange: this.handleAddressChange('zipCode'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        multiline: true,\n        rows: \"6\",\n        label: \"Description\",\n        value: form.description,\n        onChange: this.handleFormChange('description'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref3) {\n          _this2.InputLabelRef = _ref3;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Housing Type\"), React.createElement(Select, {\n        native: true,\n        value: form.housingType,\n        onChange: this.handleFormChange('housingType'),\n        input: React.createElement(OutlinedInput, {\n          name: \"Housing Type\",\n          id: \"outlined-age-native-simple\",\n          labelWidth: 'Housing Type'.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"Apartment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Apartment\"), React.createElement(\"option\", {\n        value: \"House\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"House\"), React.createElement(\"option\", {\n        value: \"Room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Room\"), React.createElement(\"option\", {\n        value: \"Studio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Studio\"), React.createElement(\"option\", {\n        value: \"Townhome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Townhome\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref4) {\n          _this2.InputLabelRef = _ref4;\n        },\n        htmlFor: \"outlined-age-native-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Bed rooms\"), React.createElement(Select, {\n        native: true,\n        value: form.bedrooms,\n        onChange: this.handleFormChange('bedrooms'),\n        input: React.createElement(OutlinedInput, {\n          name: \"bedrooms\",\n          id: \"outlined-age-native-simple\",\n          labelWidth: 'bedrooms'.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"3\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref5) {\n          _this2.InputLabelRef = _ref5;\n        },\n        htmlFor: \"outlined-age-native-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Bathrooms\"), React.createElement(Select, {\n        native: true,\n        value: form.bathrooms,\n        onChange: this.handleFormChange('bathrooms'),\n        input: React.createElement(OutlinedInput, {\n          name: \"bathrooms\",\n          id: \"outlined-age-native-simple\",\n          labelWidth: 'bathrooms'.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"3\"))), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        id: \"fileInput\",\n        multiple: true,\n        type: \"file\",\n        onChange: this.addFile,\n        accept: \"image/png, image/jpeg\",\n        className: classes.hide\n      }, _defineProperty(_React$createElement, \"onChange\", this.addFile), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(\"label\", {\n        htmlFor: \"fileInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Button, {\n        raised: true,\n        component: \"span\",\n        className: classes.fileInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"+ Upload Images\")))), React.createElement(GridList, {\n        cellHeight: 160,\n        className: classes.gridList,\n        cols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, previews), React.createElement(Divider, {\n        light: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        className: classes.margin,\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        className: classes.margin,\n        color: \"primary\",\n        type: \"reset\",\n        onClick: this.onResetClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"RESET\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: classes.margin,\n        color: \"primary\",\n        onClick: this.onSubmitClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"SUBMIT\")));\n    }\n  }]);\n\n  return NewListing;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(NewListing);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/listing/new-listing.js"],"names":["React","Component","TextField","FormGroup","FormControl","Paper","withStyles","Typography","Grid","Divider","InputLabel","Select","OutlinedInput","Card","CardMedia","IconButton","GridListTileBar","GridList","GridListTile","styles","Button","Redirect","createPosting","DeleteForeverSharpIcon","NewListing","props","addFile","event","form","state","files","Array","from","target","i","length","imagesPreviews","push","URL","createObjectURL","getBase64","then","data","encoded","replace","images","setState","inputIsValid","name","value","includes","toLowerCase","test","alert","handleFormChange","slice","handleAddressChange","address","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","onSubmitClick","Object","keys","forEach","console","log","submitSuccess","onResetClick","removeImage","imageIndex","splice","forceUpdate","bind","classes","previews","map","image","index","parseInt","height","card","media","deletePreview","icon","root","formGroup","title","price","line1","city","zipCode","description","ref","InputLabelRef","housingType","bedrooms","bathrooms","hide","fileInput","gridList","margin","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  TextField, FormGroup, FormControl,\n  Paper, withStyles,Typography, Grid,\n  Divider, InputLabel, Select, OutlinedInput,\n  Card, CardMedia, IconButton, GridListTileBar,\n  GridList, GridListTile\n} from '@material-ui/core';\n\nimport styles from './styles/new-listing';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom';\n\n//use axios for posting \nimport { createPosting } from '../../api/listings.actions';\n\n//image preview stuff\nimport DeleteForeverSharpIcon from '@material-ui/icons/DeleteForeverSharp';\n\n// https://stackoverflow.com/questions/36280818/how-to-convert-file-to-base64-in-javascript\n\nclass NewListing extends Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      form: {\n        images: [],        \n        address: {}\n      },\n      imagesPreviews:[],\n      submitSuccess: false\n    }\n    this.addFile = this.addFile.bind(this);\n    this.onResetClick = this.onResetClick.bind(this);\n    this.onSubmitClick = this.onSubmitClick.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.handleAddressChange = this.handleAddressChange.bind(this);\n    this.inputIsValid = this.inputIsValid.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n  }\n\n  addFile = event => {\n    let { form } = this.state;\n    let files = Array.from(event.target.files);\n\n    for(let i = 0; i < files.length; i++){\n         this.state.imagesPreviews.push(URL.createObjectURL(files[i]));\n         this.getBase64(files[i])\n          .then((data) => {\n            let encoded = data.replace(/^data:(.*;base64,)?/, '');     \n            form.images.push(encoded);\n          });\n    }\n    this.setState({ form: form });\n  }; \n\n  inputIsValid=(name,value)=>{\n    if(['price','zipcode'].includes(name.toLowerCase())){\n      if(/[a-zA-Z]/.test(value)){\n        alert(`${name} only contains letters`);\n        return false;\n      }\n    }\n   return true;\n  }\n\n  handleFormChange = name => ({target: {value}}) => {   \n    this.setState({ \n      form:{\n        ...this.state.form,\n        [name]: value \n      } \n    });\n\n    if(!this.inputIsValid(name,value)){     \n     this.setState({ \n      form:{\n        ...this.state.form,\n        [name]: value.slice(0, value.length-1)\n      } \n    });\n    }\n  };\n\n  handleAddressChange = name => ({target: {value}}) => {    \n    const { form } = this.state\n    form.address[name] = value;\n    this.setState({ form: form });\n\n    if(!this.inputIsValid(name,value)){ \n      form.address[name] = value.slice(0, value.length-1);\n      this.setState({ form: form });\n    }    \n  };\n\n  getBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  onSubmitClick = () => {\n      const { form } = this.state;\n      Object.keys(form).forEach(value =>{\n        console.log(form[value]);\n      })\n\n      // if(Object.keys(form).length != 8){\n      //  alert('you must fill out all form fields');\n      // }else{\n       createPosting(form, () => {\n\n         //if response is good then redirect-render new page\n         this.setState({ submitSuccess: true })\n       })\n      // }\n  };\n\n  onResetClick = () => {\n    this.setState({\n      form: {\n        address: {},\n        images: []\n      },\n      imagesPreviews:[],\n    })\n  }\n\nremoveImage =(imageIndex) => {  \n  this.state.imagesPreviews.splice(imageIndex,1);\n  console.log(this.state.imagesPreviews)\n  this.forceUpdate();\n}\n\n  render(){\n\n  const { form, submitSuccess } = this.state;\n  const { classes } = this.props;\n  \n  let previews = this.state.imagesPreviews.map((image,imageIndex) => {\n    let index=parseInt(imageIndex);\n     return (\n        <GridListTile \n           key={\"preview image \" + index} \n           cols={1} \n           style={{ height: 'auto' }}\n        >\n           <Card className={classes.card}>         \n             <CardMedia\n               className={classes.media}\n               image= {image}\n               alt= {\"previewImage\" + index}  \n               title={\"Uploaded Image \" + index} \n             />              \n           </Card>\n\n           <GridListTileBar\n              actionIcon={\n                 <IconButton className={classes.deletePreview} onClick={() => this.removeImage(imageIndex)}>\n                    <DeleteForeverSharpIcon className={classes.icon} />\n                 </IconButton>\n              }\n           />\n        </GridListTile>\n\n     );\n   }); \n\n   if(submitSuccess){\n     return <Redirect to={'/profile/listings'} />\n   }\n   \n   return(\n    <Paper className={classes.root}>\n      <Typography \n       variant=\"h5\" \n       component=\"h3\"\n      >\n          Create New Listing\n      </Typography>\n     \n       <FormGroup className={classes.formGroup} >\n          <FormControl>\n           <TextField\n             label=\"Title\"\n             value={form.title}\n             onChange={this.handleFormChange('title')}             \n             margin=\"normal\"\n           />\n\n         </FormControl>\n\n         <FormControl>\n           <TextField\n             label=\"Price\"\n             value={form.price}\n             onChange={this.handleFormChange('price')}\n             margin=\"normal\"\n           />\n         </FormControl>\n\n         <FormControl>\n           <TextField\n             label=\"Address\"\n             value={form.address.line1}\n             onChange={this.handleAddressChange('line1')}\n             margin=\"normal\"\n           />\n         </FormControl>\n\n\n         <FormControl>\n           <TextField\n             label=\"City\"\n             value={form.address.city}\n             onChange={this.handleAddressChange('city')}\n             margin=\"normal\"\n           />\n         </FormControl>\n\n\n         <FormControl>\n           <TextField\n             label=\"State\"\n             value={form.address.state}\n             onChange={this.handleAddressChange('state')}\n             margin=\"normal\"\n           />\n         </FormControl>\n\n\n\n         <FormControl>\n           <TextField\n             label=\"Zip\"\n             value={form.address.zipCode}\n             onChange={this.handleAddressChange('zipCode')}\n             margin=\"normal\"\n           />\n         </FormControl>\n         <FormControl>\n           <TextField\n             multiline\n             rows=\"6\"\n             label=\"Description\"\n             value={form.description}\n             onChange={this.handleFormChange('description')}\n             margin=\"normal\"\n           />\n         </FormControl>\n\n\n          <br /> \n          <FormControl variant=\"outlined\">\n             <InputLabel\n               ref={ref => {\n                 this.InputLabelRef = ref;\n               }}\n             >\n               Housing Type\n             </InputLabel>\n             <Select\n               native\n               value={form.housingType}\n               onChange={this.handleFormChange('housingType')}\n               input={\n                 <OutlinedInput\n                   name=\"Housing Type\"              \n                   id=\"outlined-age-native-simple\"\n                   labelWidth={'Housing Type'.length}\n                 />\n               }\n             >\n               <option value=\"\" />\n               <option value={\"Apartment\"}>Apartment</option>\n               <option value={\"House\"}>House</option>\n               <option value={\"Room\"}>Room</option>\n               <option value={\"Studio\"}>Studio</option>\n               <option value={\"Townhome\"}>Townhome</option>\n\n             </Select>  \n          </FormControl>\n\n\n          <br />\n          <FormControl variant=\"outlined\">\n             <InputLabel\n               ref={ref => {\n                 this.InputLabelRef = ref;\n               }}\n               htmlFor=\"outlined-age-native-simple\"\n             >\n              Bed rooms\n             </InputLabel>\n             <Select\n               native\n               value={form.bedrooms}\n               onChange={this.handleFormChange('bedrooms')}\n               input={\n                 <OutlinedInput\n                   name=\"bedrooms\"              \n                   id=\"outlined-age-native-simple\"\n                   labelWidth={'bedrooms'.length}\n                 />\n               }\n             >\n               <option value=\"\" />\n               <option value={1}>1</option>\n               <option value={2}>2</option>\n               <option value={3}>3</option>\n             </Select>  \n          </FormControl>\n\n          <br />\n          <FormControl variant=\"outlined\">\n             <InputLabel\n               ref={ref => {\n                 this.InputLabelRef = ref;\n               }}\n               htmlFor=\"outlined-age-native-simple\"\n             >\n               Bathrooms\n             </InputLabel>\n             <Select\n               native\n               value={form.bathrooms}\n               onChange={this.handleFormChange('bathrooms')}\n               input={\n                 <OutlinedInput\n                   name=\"bathrooms\"              \n                   id=\"outlined-age-native-simple\"\n                   labelWidth={'bathrooms'.length}\n                 />\n               }\n             >\n               <option value=\"\" />\n               <option value={1}>1</option>\n               <option value={2}>2</option>\n               <option value={3}>3</option>\n             </Select>  \n          </FormControl>\n\n\n  \n\n        \n         <FormControl>             \n          <Grid container justify = \"center\">\n              <input                 \n                id=\"fileInput\"    \n                multiple \n                type=\"file\" \n                onChange={this.addFile}\n                accept=\"image/png, image/jpeg\"    \n                className={classes.hide}\n                onChange={this.addFile}                     \n              /> \n              <label htmlFor=\"fileInput\"> \n                <Button raised \n                  component=\"span\" \n                 className={classes.fileInput}\n                 > \n                  + Upload Images\n                </Button> \n              </label> \n            </Grid>\n          </FormControl>\n\n\n         <GridList cellHeight={160} className={classes.gridList} cols={3}>\n          {previews}\n          </GridList>\n\n           <Divider light />\n       \n       </FormGroup>   \n   <Grid \n   className={classes.margin}\n   container\n   justify = \"center\"\n     >\n       <Button \n              variant=\"contained\"\n              className={classes.margin}\n              color=\"primary\"\n              type=\"reset\"\n              onClick={this.onResetClick}\n           >\n             RESET\n           </Button>\n           <Button\n              variant=\"contained\"\n              className={classes.margin}\n              color=\"primary\"\n              onClick={this.onSubmitClick}\n            >\n             SUBMIT\n            </Button> \n            </Grid>          \n     </Paper>\n\n\n           \n      \n   );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewListing);\n"]},"metadata":{},"sourceType":"module"}