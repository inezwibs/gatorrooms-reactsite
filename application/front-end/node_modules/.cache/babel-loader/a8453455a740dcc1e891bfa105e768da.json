{"ast":null,"code":"import _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/listing-detail.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Dialog, AppBar, Toolbar, IconButton, Typography, Slide, Grid, Button } from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport MapView from '../../googlemaps/maps';\nimport LandloardContactDialog from '../../_global/component/message-dialog';\nimport { checkSession } from '../../../api/user.actions';\nimport { getListing } from '../../../api/listings.actions';\nimport { validateContact } from '../../../api/message.actions'; // import ReactImages from 'react-images'; // doesn't work for some reason\n\nimport { getGeocodingInfo } from '../../../api/google.geocoding';\nimport { API_KEY } from '../../googlemaps/maps';\n/**\n * A dialog which pops up to display the listing information\n */\n\nvar Transition = function Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nvar styles = function styles(theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    content: {\n      flex: 1\n    },\n    image: {\n      padding: 10,\n      width: '100%',\n      height: theme.spacing.unit * 50\n    },\n    map: {\n      padding: 10,\n      width: '200px',\n      height: '200px'\n    },\n    infoContainer: {\n      padding: 10\n    },\n    txtContainer: {\n      paddingLeft: 5\n    },\n    contactButton: {\n      padding: theme.spacing.unit * 1\n    }\n  };\n};\n\nvar ListingDetailDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListingDetailDialog, _Component);\n\n  function ListingDetailDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ListingDetailDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListingDetailDialog).call(this, props));\n\n    _this._checkAuthentication = function () {\n      var session = sessionStorage.getItem('session');\n\n      if (session && JSON.parse(session).token) {\n        // validate session\n        var token = JSON.parse(session).token;\n        checkSession(token, function (_) {\n          return _this.setState({\n            isLoggedIn: true\n          });\n        }, function () {\n          return _this.setState({\n            isLoggedIn: false\n          });\n        });\n      } else {\n        _this.setState({\n          isLoggedIn: false\n        });\n      }\n    };\n\n    _this._updateImgContainerState = function (key, value) {\n      var imageContainer = _this.state.imageContainer;\n      imageContainer[key] = value;\n\n      _this.setState({\n        imageContainer: imageContainer\n      });\n    };\n\n    _this._contactLandloard = function () {\n      var _this$state = _this.state,\n          isLoggedIn = _this$state.isLoggedIn,\n          contactDialogOpen = _this$state.contactDialogOpen,\n          listing = _this$state.listing;\n\n      if (isLoggedIn) {\n        validateContact(listing.id, function (isValidContact) {\n          isValidContact ? _this.setState({\n            contactDialogOpen: !contactDialogOpen\n          }) : alert(\"you've already contacted this landlord\");\n        });\n      } else {\n        alert('You need to log in order to contact landloard.');\n      }\n    };\n\n    _this._calculateDistance = function (address) {\n      getGeocodingInfo(API_KEY, address, function (res) {\n        var location = res.data.results.length > 0 ? res.data.results[0].geometry.location : null;\n\n        if (location) {\n          _this.setState({\n            distance: _this.distance(location.lat, location.lng, 37.722313, -122.478467).toFixed(2)\n          });\n        }\n      });\n    };\n\n    _this.distance = function (lat1, lon1, lat2, lon2) {\n      var unit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'M';\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var radlon1 = Math.PI * lon1 / 180;\n      var radlon2 = Math.PI * lon2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n\n      if (unit == \"K\") {\n        dist = dist * 1.609344;\n      }\n\n      if (unit == \"N\") {\n        dist = dist * 0.8684;\n      }\n\n      return dist;\n    };\n\n    _this.state = {\n      listing: {\n        images: []\n      },\n      imageContainer: {\n        open: false\n      },\n      distance: 0,\n      isLoggedIn: false,\n      contactDialogOpen: false\n    };\n    _this._contactLandloard = _this._contactLandloard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._checkAuthentication = _this._checkAuthentication.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._updateImgContainerState = _this._updateImgContainerState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListingDetailDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkAuthentication();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.listingId !== this.props.listingId && this.props.listingId !== -1) {\n        getListing(this.props.listingId, function (data) {\n          _this2.setState({\n            listing: data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          listing = _this$state2.listing,\n          contactDialogOpen = _this$state2.contactDialogOpen,\n          distance = _this$state2.distance;\n      var _this$props = this.props,\n          open = _this$props.open,\n          onClose = _this$props.onClose,\n          classes = _this$props.classes;\n      var images = listing.images.map(function (img) {\n        return {\n          src: \"data:image/png;base64,\".concat(img)\n        };\n      });\n      var address = \"\".concat(listing.line1, \" \").concat(listing.city, \" \").concat(listing.state, \" \").concat(listing.zipCode); // this._calculateDistance(address);\n\n      return React.createElement(Dialog, {\n        fullScreen: true,\n        open: open,\n        onClose: onClose,\n        TransitionComponent: Transition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'row',\n        justify: 'flex-end',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: 'inherit',\n        onClick: onClose,\n        \"aria-label\": 'Close',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.image,\n        alt: \"img\",\n        src: images.length > 0 ? images[0].src : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(MapView, {\n        mapContainer: classes.map,\n        address: \"\".concat(listing.line1, \" \").concat(listing.city, \" \").concat(listing.state, \" \").concat(listing.zipCode),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Listing Info\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"$\", listing.price)), React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"| \", listing.bedrooms, \" bd\")), React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"| \", listing.bathrooms, \" ba\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, address)))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Date Posted: \", listing.datePosted)))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.txtContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Distance to SFSU: \", listing.distance, \" miles\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'row',\n        justify: 'flex-start',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"small\",\n        variant: \"contained\",\n        className: classes.contactButton,\n        onClick: function onClick() {\n          return _this3._contactLandloard();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Contact Landloard\")))))))), React.createElement(LandloardContactDialog, {\n        open: contactDialogOpen,\n        listingId: this.state.listing.id,\n        onClose: function onClose() {\n          return _this3.setState({\n            contactDialogOpen: !contactDialogOpen\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ListingDetailDialog;\n}(Component);\n\nListingDetailDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  listingId: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(ListingDetailDialog);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/listing-detail.js"],"names":["React","Component","PropTypes","withStyles","Dialog","AppBar","Toolbar","IconButton","Typography","Slide","Grid","Button","Close","CloseIcon","MapView","LandloardContactDialog","checkSession","getListing","validateContact","getGeocodingInfo","API_KEY","Transition","props","styles","theme","appBar","position","content","flex","image","padding","width","height","spacing","unit","map","infoContainer","txtContainer","paddingLeft","contactButton","ListingDetailDialog","_checkAuthentication","session","sessionStorage","getItem","JSON","parse","token","_","setState","isLoggedIn","_updateImgContainerState","key","value","imageContainer","state","_contactLandloard","contactDialogOpen","listing","id","isValidContact","alert","_calculateDistance","address","res","location","data","results","length","geometry","distance","lat","lng","toFixed","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","radlon1","radlon2","theta","radtheta","dist","sin","cos","acos","images","open","bind","prevProps","listingId","onClose","classes","img","src","line1","city","zipCode","price","bedrooms","bathrooms","datePosted","propTypes","bool","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    withStyles,Dialog, AppBar,\n    Toolbar, IconButton, Typography,\n    Slide, Grid, Button\n} from '@material-ui/core';\nimport {\n    Close as CloseIcon,\n} from '@material-ui/icons';\nimport MapView from '../../googlemaps/maps';\nimport LandloardContactDialog from '../../_global/component/message-dialog';\nimport { checkSession } from '../../../api/user.actions';\nimport { getListing } from '../../../api/listings.actions';\nimport { validateContact } from '../../../api/message.actions';\n// import ReactImages from 'react-images'; // doesn't work for some reason\nimport { getGeocodingInfo } from '../../../api/google.geocoding';\nimport { API_KEY } from '../../googlemaps/maps';\n\n/**\n * A dialog which pops up to display the listing information\n */\nconst Transition = (props) => {\n    return <Slide direction=\"up\" {...props} />\n}\n\nconst styles = theme => ({\n    appBar: {\n        position: 'relative'\n    },\n    content: {\n        flex: 1\n    },\n    image: {\n        padding: 10,\n        width: '100%',\n        height: theme.spacing.unit * 50,\n    },\n    map: {\n        padding: 10,\n        width: '200px',\n        height: '200px',\n    },\n    infoContainer: {\n        padding: 10\n    },\n    txtContainer: {\n        paddingLeft: 5\n    },\n    contactButton: {\n        padding: theme.spacing.unit*1,\n    }\n});\n\nclass ListingDetailDialog extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            listing: {\n                images: []\n            },\n            imageContainer: {\n                open: false\n            },\n            distance: 0,\n            isLoggedIn: false,\n            contactDialogOpen: false\n        }\n        this._contactLandloard = this._contactLandloard.bind(this);\n        this._checkAuthentication = this._checkAuthentication.bind(this);\n        this._updateImgContainerState = this._updateImgContainerState.bind(this);\n    }\n\n    componentDidMount(){\n        this._checkAuthentication()\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.listingId !== this.props.listingId\n            && this.props.listingId !== -1){\n            getListing(this.props.listingId, (data) => {\n                this.setState({ listing: data });\n            });\n        }\n    }\n\n    _checkAuthentication = () => {\n        const session = sessionStorage.getItem('session')\n            if(session && JSON.parse(session).token){\n                // validate session\n                const token = JSON.parse(session).token;\n          checkSession(token, \n            (_) => this.setState({ isLoggedIn: true }),\n            () => this.setState({ isLoggedIn: false }));\n            }else{\n                this.setState({ isLoggedIn: false });\n            }\n      }\n\n    _updateImgContainerState = (key, value) => {\n        let { imageContainer } = this.state;\n        imageContainer[key] = value;\n        this.setState({ imageContainer });\n    }\n\n    _contactLandloard = () => {\n        const { isLoggedIn, contactDialogOpen ,listing } = this.state;\n        if(isLoggedIn){\n          validateContact(listing.id ,(isValidContact)=>{\n           isValidContact? this.setState({ contactDialogOpen: !contactDialogOpen }): alert(\"you've already contacted this landlord\")       \n          })            \n        }\n        else{ alert('You need to log in order to contact landloard.') }\n    }\n\n    _calculateDistance = (address) => {\n        getGeocodingInfo(API_KEY, address, (res) => {\n            let location = res.data.results.length > 0 ? res.data.results[0].geometry.location : null;\n            if(location){\n                this.setState({ distance: this.distance(location.lat, location.lng, 37.722313, -122.478467).toFixed(2) })\n            }\n        })\n    }\n\n    distance = (lat1, lon1, lat2, lon2, unit = 'M') => {\n        var radlat1 = Math.PI * lat1/180\n        var radlat2 = Math.PI * lat2/180\n        var radlon1 = Math.PI * lon1/180\n        var radlon2 = Math.PI * lon2/180\n        var theta = lon1-lon2\n        var radtheta = Math.PI * theta/180\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        dist = Math.acos(dist)\n        dist = dist * 180/Math.PI\n        dist = dist * 60 * 1.1515\n        if (unit==\"K\") { dist = dist * 1.609344 }\n        if (unit==\"N\") { dist = dist * 0.8684 }\n        return dist\n    }\n\n    render(){\n        \n        const { listing, contactDialogOpen, distance } = this.state;\n        const { open, onClose, classes } = this.props;\n\n        const images = listing\n                .images\n                .map((img) => ({ src: `data:image/png;base64,${img}` }));\n        const address = `${listing.line1} ${listing.city} ${listing.state} ${listing.zipCode}`;\n        // this._calculateDistance(address);\n        return (\n            <Dialog\n                fullScreen\n                open={open}\n                onClose={onClose}\n                TransitionComponent={Transition}\n            >\n                <AppBar className={classes.appBar} >\n                    <Grid\n                        container\n                        direction={'row'}\n                        justify={'flex-end'}\n                    >\n                        <Toolbar>\n                            <IconButton\n                                color={'inherit'}\n                                onClick={onClose}\n                                aria-label={'Close'}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </Toolbar>\n                    </Grid>\n                </AppBar>\n                <div className={classes.content} >\n                    <Grid container style={{ width: '100%' }} >\n                        <Grid item lg={6} md={6} sm={6} >\n                            <img\n                                className={classes.image}\n                                alt=\"img\"\n                                src={images.length > 0 ? images[0].src : null}\n                            />\n                            <MapView\n                                mapContainer={classes.map}\n                                address={`${listing.line1} ${listing.city} ${listing.state} ${listing.zipCode}`}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} >\n                            <div className={classes.infoContainer} >\n                                <Grid\n                                    container\n                                    direction={'row'}\n                                >   \n                                    <Grid item xs={12}>\n                                        <Grid container alignItems={'center'} >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h5\" >Listing Info</Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems={'center'} >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h6\" >${listing.price}</Typography>\n                                            </div>\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant='subtitle2' >| {listing.bedrooms} bd</Typography>\n                                            </div>\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"subtitle2\" >| {listing.bathrooms} ba</Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h6\" >\n                                                    {address}\n                                                </Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>  \n                                    <Grid item xs={12}>\n                                        <Grid container >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h6\" >Date Posted: {listing.datePosted}</Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>   \n                                    <Grid item xs={12}>\n                                        <Grid container >\n                                            <div className={classes.txtContainer} >\n                                                <Typography variant=\"h6\" >Distance to SFSU: {listing.distance} miles</Typography>\n                                            </div>\n                                        </Grid>\n                                    </Grid>   \n                                    <Grid item xs={12}>\n                                        <Grid \n                                            container\n                                            direction={'row'}\n                                            justify={'flex-start'}\n                                        >\n                                            <Button\n                                                color=\"primary\"\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                className={classes.contactButton}\n                                                onClick={() => this._contactLandloard()}\n                                            >\n                                                Contact Landloard\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <LandloardContactDialog\n                    open={contactDialogOpen}\n                    listingId={this.state.listing.id}\n                    onClose={() => this.setState({ contactDialogOpen: !contactDialogOpen })}\n                />\n            </Dialog>\n        )\n    }\n}\n\nListingDetailDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    listingId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles, )(ListingDetailDialog);"]},"metadata":{},"sourceType":"module"}