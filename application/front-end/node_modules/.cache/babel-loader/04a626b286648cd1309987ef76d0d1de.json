{"ast":null,"code":"import _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/snack-bar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { colors, withStyles, SnackbarContent, Snackbar, IconButton } from '@material-ui/core';\nimport { Error as ErrorIcon, Warning as WarningIcon, Close as CloseIcon, Info as InfoIcon, CheckCircle as CheckCircleIcon } from '@material-ui/icons';\n/*\n * Snack Bar is a component that is used to display an error message when the log in is invalid.\n * And when enrollment was successfull.  \n */\n\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nvar styles1 = function styles1(theme) {\n  return {\n    success: {\n      backgroundColor: colors.green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark\n    },\n    warning: {\n      backgroundColor: colors.amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n};\n\nfunction CustomSnackbarContent(props) {\n  var classes = props.classes,\n      className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"message\", \"onClose\", \"variant\"]);\n\n  var Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: classNames(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classNames(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}\n\nCustomSnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nvar MySnackbarContentWrapper = withStyles(styles1)(CustomSnackbarContent);\n\nvar styles2 = function styles2(theme) {\n  return {\n    margin: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar CustomSnackBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomSnackBar, _React$Component);\n\n  function CustomSnackBar() {\n    _classCallCheck(this, CustomSnackBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CustomSnackBar).apply(this, arguments));\n  }\n\n  _createClass(CustomSnackBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          onClose = _this$props.onClose,\n          type = _this$props.type,\n          message = _this$props.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        open: open,\n        autoHideDuration: 6000,\n        onClose: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(MySnackbarContentWrapper, {\n        onClose: onClose,\n        variant: type,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CustomSnackBar;\n}(React.Component);\n\nCustomSnackBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  type: PropTypes.oneOf(['success', 'error']).isRequired,\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default withStyles(styles2)(CustomSnackBar);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/_global/component/snack-bar.js"],"names":["React","PropTypes","classNames","colors","withStyles","SnackbarContent","Snackbar","IconButton","Error","ErrorIcon","Warning","WarningIcon","Close","CloseIcon","Info","InfoIcon","CheckCircle","CheckCircleIcon","variantIcon","success","warning","error","info","styles1","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","CustomSnackbarContent","props","classes","className","onClose","variant","other","Icon","close","propTypes","object","isRequired","string","node","func","oneOf","MySnackbarContentWrapper","styles2","margin","CustomSnackBar","open","type","vertical","horizontal","Component","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {\n  colors, withStyles, SnackbarContent,\n  Snackbar, IconButton,\n} from '@material-ui/core';\nimport {\n  Error as ErrorIcon, Warning as WarningIcon,\n  Close as CloseIcon, Info as InfoIcon,\n  CheckCircle as CheckCircleIcon\n} from '@material-ui/icons'\n\n/*\n * Snack Bar is a component that is used to display an error message when the log in is invalid.\n * And when enrollment was successfull.  \n */\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: colors.green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: colors.amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction CustomSnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nCustomSnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(CustomSnackbarContent);\n\nconst styles2 = theme => ({\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass CustomSnackBar extends React.Component {\n\n  render() {\n    const { open, onClose, type, message } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={open}\n          autoHideDuration={6000}\n          onClose={onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={onClose}\n            variant={type}\n            message={message}\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nCustomSnackBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  type: PropTypes.oneOf([ 'success', 'error' ]).isRequired,\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles2)(CustomSnackBar);"]},"metadata":{},"sourceType":"module"}