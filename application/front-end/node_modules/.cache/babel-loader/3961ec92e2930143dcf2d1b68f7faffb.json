{"ast":null,"code":"import _objectSpread from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/reguser/pages/admin-listings.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Grid, Paper, Button, CardActions } from '@material-ui/core';\nimport ListingCard from '../../_global/component/listing-card';\nimport styles from '../styles/styles';\nimport _ from 'lodash';\nimport { getListings } from '../../../api/listings.actions';\n\nvar FormRow = function FormRow(_ref) {\n  var listings = _ref.listings,\n      _ref$columnView = _ref.columnView,\n      columnView = _ref$columnView === void 0 ? true : _ref$columnView;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, listings.map(function (value, index) {\n    return React.createElement(Grid, {\n      item: true,\n      lg: columnView ? 4 : 11,\n      md: 6,\n      sm: 12,\n      style: {\n        width: '100%'\n      },\n      key: \"grid-index-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(ListingCard, {\n      listing: value,\n      actions: React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Approve\"), React.createElement(Button, {\n        size: \"small\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Reject\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }));\n};\n\nvar AdminListings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminListings, _Component);\n\n  function AdminListings(props) {\n    var _this;\n\n    _classCallCheck(this, AdminListings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminListings).call(this, props));\n\n    _this._toggleSortMenu = function (event) {\n      var sortMenuVisible = _this.state.sortMenuVisible;\n      var state = {\n        sortMenuVisible: !sortMenuVisible\n      };\n\n      if (event) {\n        state['anchorEl'] = event.currentTarget;\n      }\n\n      _this.setState(state);\n    };\n\n    _this.getListings = function () {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var params = new URLSearchParams();\n\n      if (query.types && !_.isEmpty(query.types)) {\n        var selectedTypes = query.types;\n        selectedTypes.forEach(function (value) {\n          return params.append(\"type\", value);\n        });\n      }\n\n      if (query.beds && query.beds !== '0') {\n        params.append(\"beds\", query.beds);\n      }\n\n      if (query.sortBy) {\n        params.append(\"sortBy\", query.sortBy);\n      }\n\n      if (query.text) {\n        params.append(\"text\", encodeURI(query.text));\n      }\n\n      getListings(params, function (data) {\n        _this.setState({\n          listings: data || []\n        });\n      });\n    };\n\n    _this.displayListings = function (listings, columnView) {\n      var rows = [];\n\n      for (var i = 0; i < listings.length; i += 3) {\n        rows.push(React.createElement(Grid, {\n          container: true,\n          key: \"grid-container-\".concat(i + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(FormRow, {\n          listings: listings.slice(i, i + 3),\n          props: _this.props,\n          columnView: columnView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })));\n      }\n\n      return rows;\n    };\n\n    _this.handleSortTxt = function (key) {\n      var _this$state = _this.state,\n          searchTxt = _this$state.searchTxt,\n          query = _this$state.query;\n\n      _this.setState({\n        sortBy: key\n      }, function () {\n        return _this.getListings(_objectSpread({}, query, {\n          text: searchTxt,\n          sortBy: key\n        }));\n      });\n    };\n\n    _this.state = {\n      listings: [],\n      sortMenuVisible: false,\n      anchorEl: null,\n      sortBy: null\n    };\n    _this.getListings = _this.getListings.bind(_assertThisInitialized(_this));\n    _this.handleSortTxt = _this.handleSortTxt.bind(_assertThisInitialized(_this));\n    _this._toggleSortMenu = _this._toggleSortMenu.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AdminListings, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getListings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state2 = this.state,\n          listings = _this$state2.listings,\n          columnView = _this$state2.columnView;\n      return React.createElement(Paper, {\n        className: classes.main,\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.displayListings(listings, columnView))));\n    }\n  }]);\n\n  return AdminListings;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(AdminListings);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/reguser/pages/admin-listings.js"],"names":["React","Component","withStyles","Grid","Paper","Button","CardActions","ListingCard","styles","_","getListings","FormRow","listings","columnView","map","value","index","width","AdminListings","props","_toggleSortMenu","event","sortMenuVisible","state","currentTarget","setState","query","params","URLSearchParams","types","isEmpty","selectedTypes","forEach","append","beds","sortBy","text","encodeURI","data","displayListings","rows","i","length","push","slice","handleSortTxt","key","searchTxt","anchorEl","bind","classes","main","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  withStyles, Grid, Paper, Button,\n  CardActions\n} from '@material-ui/core';\nimport ListingCard from '../../_global/component/listing-card';\nimport styles from '../styles/styles';\nimport _ from 'lodash';\nimport { getListings } from '../../../api/listings.actions';\n\nconst FormRow = ({ listings, columnView = true }) => {\n  return (\n    <React.Fragment>\n      {\n        listings.map((value, index) => (\n          <Grid\n            item\n            lg={columnView ? 4 : 11}\n            md={6}\n            sm={12}\n            style={{ width: '100%' }}\n            key={`grid-index-${index}`}\n          >\n            <ListingCard\n              listing={value}\n              actions={(\n                <CardActions>\n                  <Button size=\"small\" color=\"primary\">\n                    Approve\n                  </Button>\n                  <Button size=\"small\" color=\"secondary\">\n                    Reject\n                  </Button>\n                </CardActions>\n              )}\n            />\n          </Grid>\n        ))\n      }\n    </React.Fragment>\n  );\n}\n\nclass AdminListings extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listings: [],\n      sortMenuVisible: false,\n      anchorEl: null,\n      sortBy: null\n    };\n    this.getListings = this.getListings.bind(this);\n    this.handleSortTxt = this.handleSortTxt.bind(this);\n    this._toggleSortMenu = this._toggleSortMenu.bind(this);\n  }\n\n  _toggleSortMenu = (event) => {\n    const { sortMenuVisible } = this.state;\n    let state = { sortMenuVisible: !sortMenuVisible };\n    if(event){\n      state['anchorEl'] = event.currentTarget;\n    }\n    this.setState(state)\n  }\n\n  componentWillMount() {\n    this.getListings();\n  }\n\n\n  getListings = (query = {}) => {\n    let params = new URLSearchParams();\n    if (query.types && !_.isEmpty(query.types)) {\n      let selectedTypes = query.types;\n      selectedTypes.forEach((value) => params.append(\"type\", value));\n    }\n    if(query.beds && query.beds !== '0'){\n      params.append(\"beds\", query.beds);\n    }\n    if(query.sortBy){\n      params.append(\"sortBy\", query.sortBy);\n    }\n    if(query.text){\n      params.append(\"text\", encodeURI(query.text));\n    }\n    getListings(params, (data) => {\n      this.setState({ listings: data || [] })\n    })\n  }\n\n  displayListings = (listings, columnView) => {\n    let rows = [];\n    for (let i = 0; i < listings.length; i += 3) {\n      rows.push(\n        <Grid\n          container\n          key={`grid-container-${i + 1}`}\n        >\n          <FormRow\n            listings={listings.slice(i, i + 3)}\n            props={this.props}\n            columnView={columnView}\n          />\n        </Grid>\n      );\n    }\n    return rows;\n  }\n\n  handleSortTxt = key => {\n    const { searchTxt, query } = this.state;\n    this.setState({ sortBy: key }, () => this.getListings({\n      ...query,\n      text: searchTxt,\n      sortBy: key\n    }));\n  };\n\n  render() {\n    const classes = this.props.classes;\n    const { listings, columnView } = this.state;\n\n    return (\n      <Paper className={classes.main} elevation={1}>\n        <Grid container style={{ width: '100%' }} >\n          <Grid item lg={12} md={12} sm={12} >\n            {this.displayListings(listings, columnView)}\n          </Grid>\n        </Grid>\n      </Paper>\n\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AdminListings);"]},"metadata":{},"sourceType":"module"}