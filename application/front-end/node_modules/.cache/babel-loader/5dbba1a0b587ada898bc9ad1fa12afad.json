{"ast":null,"code":"import _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/contact/component/message-box.js\";\nimport React, { Component } from 'react';\nimport { Paper, withStyles, Typography, List, ListItem, ListItemText, ListItemAvatar, Avatar, IconButton, Card, CardActionArea, CardContent, CardMedia } from '@material-ui/core';\nimport styles from '../styles/message-box';\nimport { formatUtcMessageTime } from '../../../utils/messages';\nimport ListingDetail from '../../_global/component/listing-detail';\n\nvar MessageBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageBox, _Component);\n\n  function MessageBox(props) {\n    var _this;\n\n    _classCallCheck(this, MessageBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageBox).call(this, props));\n    _this.latestMessage = React.createRef();\n\n    _this.formatUtcTime = function (utcTimeStamp) {\n      return formatUtcMessageTime(utcTimeStamp);\n    };\n\n    _this.scrollToBottom = function () {\n      _this.latestMessage.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    _this.showListingDetail = function (id) {\n      _this.setState({\n        detailId: id\n      });\n    };\n\n    _this.displayListingPreview = function (classes, chatInfo, defaultBox) {\n      if (defaultBox) return;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        onClick: function onClick() {\n          _this.showListingDetail(chatInfo.listingId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Listing - \".concat(chatInfo.listingTitle))), React.createElement(CardMedia, {\n        component: \"img\",\n        alt: \"listing img\",\n        className: classes.media,\n        height: \"140\",\n        image: \"https://storage.googleapis.com/library-gs.ihouseprd.com/images/default-placeholder-lg.png\",\n        title: \"Contemplative Reptile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(Typography, {\n        className: classes.blankSpace,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    };\n\n    _this.displayTitle = function (classes, chatInfo, defaultBox) {\n      if (defaultBox) {\n        return React.createElement(Typography, {\n          component: \"h2\",\n          variant: \"display2\",\n          gutterBottom: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"No chat selected\");\n      }\n\n      return React.createElement(ListItem, {\n        button: true,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        className: classes.contactAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        alt: \"contact user's avatar\",\n        src: chatInfo.contactsAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: chatInfo.chatingWith,\n        secondary: \"Listing title - \".concat(chatInfo.listingTitle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        \"aria-label\": \"Delete\",\n        onClick: _this.props.refreshHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Refresh\"));\n    };\n\n    _this.displayMessages = function () {\n      if (_this.props.messages.length === 0) {\n        return;\n      }\n\n      var messages = [];\n\n      _this.props.messages.forEach(function (message) {\n        messages.push(React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          alignItems: \"flex-start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: \"your avatar\",\n          src: message.senderAvatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: \"\".concat(message.senderEmail, \" sent - \").concat(_this.formatUtcTime(message.sentTime)),\n          secondary: React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            component: \"span\",\n            color: \"textPrimary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, message.message)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }))));\n      });\n\n      return messages;\n    };\n\n    _this.state = {\n      detailId: -1\n    };\n    _this.displayListingPreview = _this.displayListingPreview.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.displayMessages = _this.displayMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.scrollToBottom = _this.scrollToBottom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formatUtcTime = _this.formatUtcTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.displayTitle = _this.displayTitle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showListingDetail = _this.showListingDetail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MessageBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          chatInfo = _this$props.chatInfo,\n          defaultBox = _this$props.defaultBox;\n      var detailId = this.state.detailId;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.displayListingPreview(classes, chatInfo, defaultBox), this.displayTitle(classes, chatInfo, defaultBox), React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: classes.chatBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.displayMessages(), React.createElement(\"div\", {\n        ref: this.latestMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), React.createElement(ListingDetail, {\n        open: detailId !== -1,\n        listingId: detailId,\n        onClose: function onClose() {\n          return _this2.setState({\n            detailId: -1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MessageBox;\n}(Component);\n\nexport default withStyles(styles)(MessageBox);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/contact/component/message-box.js"],"names":["React","Component","Paper","withStyles","Typography","List","ListItem","ListItemText","ListItemAvatar","Avatar","IconButton","Card","CardActionArea","CardContent","CardMedia","styles","formatUtcMessageTime","ListingDetail","MessageBox","props","latestMessage","createRef","formatUtcTime","utcTimeStamp","scrollToBottom","current","scrollIntoView","behavior","showListingDetail","id","setState","detailId","displayListingPreview","classes","chatInfo","defaultBox","card","listingId","listingTitle","media","blankSpace","displayTitle","contactAvatar","contactsAvatar","chatingWith","refreshHandler","displayMessages","messages","length","forEach","message","push","senderAvatar","senderEmail","sentTime","state","bind","chatBox"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport { \n  Paper,withStyles,\n  Typography, \n  List,ListItem,\n  ListItemText,ListItemAvatar,\n  Avatar, \n  IconButton,\n  Card,CardActionArea,CardContent,CardMedia,\n } from '@material-ui/core';\n\nimport styles from '../styles/message-box';\nimport {formatUtcMessageTime} from '../../../utils/messages'\nimport ListingDetail from '../../_global/component/listing-detail';\n\nclass MessageBox extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      detailId: -1,\n    }\n    this.displayListingPreview = this.displayListingPreview.bind(this);\n    this.displayMessages = this.displayMessages.bind(this);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n    this.formatUtcTime = this.formatUtcTime.bind(this);\n    this.displayTitle = this.displayTitle.bind(this);\n    this.showListingDetail = this.showListingDetail.bind(this);\n  }\n\n  latestMessage = React.createRef()\n\n  componentDidMount(){  \n    this.scrollToBottom();   \n  } \n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  formatUtcTime = (utcTimeStamp)=>{\n    return formatUtcMessageTime(utcTimeStamp)\n  }\n\n  scrollToBottom = () =>{\n    this.latestMessage.current.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  showListingDetail = (id) =>{\n    this.setState({\n      detailId: id,\n    })\n  }\n\n  displayListingPreview = (classes, chatInfo, defaultBox) =>{\n    if(defaultBox) return\n      return(\n       <div>\n       <Card className={classes.card}>\n           <CardActionArea\n             onClick={()=> {this.showListingDetail(chatInfo.listingId)}}\n           >\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                { `Listing - ${chatInfo.listingTitle}`}\n              </Typography>\n       \n            </CardContent>\n            <CardMedia\n              component=\"img\"\n              alt=\"listing img\"\n              className={classes.media}\n              height=\"140\"\n              image=\"https://storage.googleapis.com/library-gs.ihouseprd.com/images/default-placeholder-lg.png\"\n              title=\"Contemplative Reptile\"\n            />\n          </CardActionArea>\n        </Card>\n       \n        <Typography className={classes.blankSpace}>                \n        </Typography>\n       </div>\n     );\n  }\n\n  displayTitle = (classes, chatInfo, defaultBox) =>{\n\n    if(defaultBox){\n      return(\n       <Typography component=\"h2\" variant=\"display2\" gutterBottom>\n          No chat selected \n        </Typography>\n      )\n     }\n\n    return(\n\n           <ListItem \n            button \n            selected = {true}\n           > \n           <ListItemAvatar \n            className={classes.contactAvatar}\n            >\n              <Avatar \n                alt=\"contact user's avatar\"               \n                src={chatInfo.contactsAvatar} \n              />\n           </ListItemAvatar>\n            \n           <ListItemText            \n             primary={chatInfo.chatingWith}\n             secondary={ \n              `Listing title - ${chatInfo.listingTitle}`\n             }                 \n           />     \n\n            <IconButton \n              aria-label=\"Delete\"\n              onClick={this.props.refreshHandler}                          \n             >\n                Refresh\n            </IconButton>      \n      </ListItem>\n    );\n  }\n\n  displayMessages =() =>{\n\n  \tif(this.props.messages.length === 0){\n      return;\n    }\n\n    let messages=[]\n    this.props.messages.forEach((message)=>{\n       messages.push(\n        <React.Fragment>\n          <ListItem alignItems=\"flex-start\">\n           <ListItemAvatar>\n             <Avatar alt=\"your avatar\" src={message.senderAvatar} />\n           </ListItemAvatar>\n           <ListItemText\n             primary={ `${message.senderEmail} sent - ${this.formatUtcTime(message.sentTime) }` }\n             secondary={\n               <React.Fragment>\n                 <Typography component=\"span\"  color=\"textPrimary\">\n                 {message.message}\n                 </Typography>               \n               </React.Fragment>\n             }\n           />\n          </ListItem>\n        </React.Fragment>\n      );\n    });\n\n    return messages;\n  }\n\n      \n  render() {    \n  \tconst {classes, chatInfo, defaultBox} = this.props;\n    const {detailId} = this.state;\n   return(\n  \t <React.Fragment>\n\n      {this.displayListingPreview(classes, chatInfo, defaultBox)}\n\n      {this.displayTitle(classes, chatInfo, defaultBox)}\n \n\t    <Paper>    \n\t      <List className={classes.chatBox}>                                 \n          {this.displayMessages()}\n          <div ref={this.latestMessage} />\n        </List>\n  \t  </Paper>\n\n       <ListingDetail\n          open={detailId !== -1}\n          listingId={detailId}\n          onClose={() => this.setState({ detailId: -1 })}\n        />\n    \n  \t</React.Fragment>\n  );\n }\n}\n\nexport default withStyles(styles)(MessageBox);"]},"metadata":{},"sourceType":"module"}