{"ast":null,"code":"import _objectSpread from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/inez/Documents/csc648-sp19-team09/application/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/reguser/pages/profile-listings.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Grid, Paper, CardActions, Button, Typography, Fab } from '@material-ui/core';\nimport { Add as AddIcon } from '@material-ui/icons';\nimport ListingCard from '../../_global/component/listing-card';\nimport styles from '../styles/styles';\nimport _ from 'lodash';\nimport { getListings, deleteListing } from '../../../api/listings.actions';\nimport { Link } from 'react-router-dom';\n\nvar FormRow = function FormRow(_ref) {\n  var listings = _ref.listings,\n      _ref$columnView = _ref.columnView,\n      columnView = _ref$columnView === void 0 ? true : _ref$columnView,\n      refresh = _ref.refresh;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, listings.map(function (value, index) {\n    return React.createElement(Grid, {\n      item: true,\n      lg: columnView ? 4 : 11,\n      md: 6,\n      sm: 12,\n      style: {\n        width: '100%'\n      },\n      key: \"grid-index-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(ListingCard, {\n      listing: value,\n      displayBadge: true,\n      actions: React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return deleteListing(value.id, refresh);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Delete\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }));\n};\n\nvar ProfileListings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileListings, _Component);\n\n  function ProfileListings(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileListings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileListings).call(this, props));\n\n    _this._toggleSortMenu = function (event) {\n      var sortMenuVisible = _this.state.sortMenuVisible;\n      var state = {\n        sortMenuVisible: !sortMenuVisible\n      };\n\n      if (event) {\n        state['anchorEl'] = event.currentTarget;\n      }\n\n      _this.setState(state);\n    };\n\n    _this.getListings = function () {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var params = new URLSearchParams();\n      params.append('profile', 'true');\n\n      if (query.types && !_.isEmpty(query.types)) {\n        var selectedTypes = query.types;\n        selectedTypes.forEach(function (value) {\n          return params.append(\"type\", value);\n        });\n      }\n\n      if (query.beds && query.beds !== '0') {\n        params.append(\"beds\", query.beds);\n      }\n\n      if (query.sortBy) {\n        params.append(\"sortBy\", query.sortBy);\n      }\n\n      if (query.text) {\n        params.append(\"text\", encodeURI(query.text));\n      }\n\n      getListings(params, function (data) {\n        _this.setState({\n          listings: data || []\n        });\n      }, {\n        'Session': JSON.parse(sessionStorage.getItem('session')).token\n      });\n    };\n\n    _this.displayListings = function (listings, columnView) {\n      var rows = [];\n\n      for (var i = 0; i < listings.length; i += 3) {\n        rows.push(React.createElement(Grid, {\n          container: true,\n          key: \"grid-container-\".concat(i + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(FormRow, {\n          listings: listings.slice(i, i + 3),\n          props: _this.props,\n          columnView: columnView,\n          refresh: function refresh() {\n            return _this.getListings();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })));\n      }\n\n      return rows;\n    };\n\n    _this.handleSortTxt = function (key) {\n      var _this$state = _this.state,\n          searchTxt = _this$state.searchTxt,\n          query = _this$state.query;\n\n      _this.setState({\n        sortBy: key\n      }, function () {\n        return _this.getListings(_objectSpread({}, query, {\n          text: searchTxt,\n          sortBy: key\n        }));\n      });\n    };\n\n    _this.state = {\n      listings: [],\n      sortMenuVisible: false,\n      anchorEl: null,\n      sortBy: null\n    };\n    _this.getListings = _this.getListings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSortTxt = _this.handleSortTxt.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._toggleSortMenu = _this._toggleSortMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProfileListings, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getListings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state2 = this.state,\n          listings = _this$state2.listings,\n          columnView = _this$state2.columnView;\n      return React.createElement(Paper, {\n        className: classes.main,\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'row',\n        justify: 'flex-end',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        variant: \"extended\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.addBtnMargin,\n        component: Link,\n        to: '/profile/listings/new',\n        style: {\n          display: listings.length === 0 ? 'none' : 'flex',\n          width: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        className: classes.extendedIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), \"Add Listing\")), React.createElement(Grid, {\n        container: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.title,\n        variant: 'h5',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Your Listings\"), React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, listings.length > 0 ? this.displayListings(listings, columnView) : React.createElement(\"div\", {\n        className: classes.profileListings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: 'center',\n        justify: 'center',\n        direction: 'column',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: 'display1',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"You don't have any listings posted\"), React.createElement(Fab, {\n        variant: \"extended\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.margin,\n        component: Link,\n        to: '/profile/listings/new',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        className: classes.extendedIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), \"Add Listing\"))))));\n    }\n  }]);\n\n  return ProfileListings;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(ProfileListings);","map":{"version":3,"sources":["/home/inez/Documents/csc648-sp19-team09/application/front-end/src/modules/reguser/pages/profile-listings.js"],"names":["React","Component","withStyles","Grid","Paper","CardActions","Button","Typography","Fab","Add","AddIcon","ListingCard","styles","_","getListings","deleteListing","Link","FormRow","listings","columnView","refresh","map","value","index","width","id","ProfileListings","props","_toggleSortMenu","event","sortMenuVisible","state","currentTarget","setState","query","params","URLSearchParams","append","types","isEmpty","selectedTypes","forEach","beds","sortBy","text","encodeURI","data","JSON","parse","sessionStorage","getItem","token","displayListings","rows","i","length","push","slice","handleSortTxt","key","searchTxt","anchorEl","bind","classes","main","addBtnMargin","display","extendedIcon","title","profileListings","margin","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  withStyles, Grid, Paper,\n  CardActions, Button, Typography,\n  Fab\n} from '@material-ui/core';\nimport { Add as AddIcon } from '@material-ui/icons';\nimport ListingCard from '../../_global/component/listing-card';\nimport styles from '../styles/styles';\nimport _ from 'lodash';\nimport { getListings, deleteListing } from '../../../api/listings.actions';\nimport { Link } from 'react-router-dom';\n\nconst FormRow = ({ listings, columnView = true, refresh }) => {\n  return (\n    <React.Fragment>\n      {\n        listings.map((value, index) => (\n          <Grid\n            item\n            lg={columnView ? 4 : 11}\n            md={6}\n            sm={12}\n            style={{ width: '100%' }}\n            key={`grid-index-${index}`}\n          >\n            <ListingCard\n              listing={value}\n              displayBadge={true}\n              actions={(\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    onClick={() => deleteListing(value.id, refresh)}\n                  >\n                    Delete\n                  </Button>\n                </CardActions>\n              )}\n            />\n          </Grid>\n        ))\n      }\n    </React.Fragment>\n  );\n}\n\nclass ProfileListings extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listings: [],\n      sortMenuVisible: false,\n      anchorEl: null,\n      sortBy: null\n    };\n    this.getListings = this.getListings.bind(this);\n    this.handleSortTxt = this.handleSortTxt.bind(this);\n    this._toggleSortMenu = this._toggleSortMenu.bind(this);\n  }\n\n  _toggleSortMenu = (event) => {\n    const { sortMenuVisible } = this.state;\n    let state = { sortMenuVisible: !sortMenuVisible };\n    if (event) {\n      state['anchorEl'] = event.currentTarget;\n    }\n    this.setState(state)\n  }\n\n  componentWillMount() {\n    this.getListings();\n  }\n\n\n  getListings = (query = {}) => {\n    let params = new URLSearchParams();\n    params.append('profile', 'true');\n    if (query.types && !_.isEmpty(query.types)) {\n      let selectedTypes = query.types;\n      selectedTypes.forEach((value) => params.append(\"type\", value));\n    }\n    if (query.beds && query.beds !== '0') {\n      params.append(\"beds\", query.beds);\n    }\n    if (query.sortBy) {\n      params.append(\"sortBy\", query.sortBy);\n    }\n    if (query.text) {\n      params.append(\"text\", encodeURI(query.text));\n    }\n    getListings(params, (data) => {\n      this.setState({ listings: data || [] })\n    }, {\n        'Session': JSON.parse(sessionStorage.getItem('session')).token\n      })\n  }\n\n  displayListings = (listings, columnView) => {\n    let rows = [];\n    for (let i = 0; i < listings.length; i += 3) {\n      rows.push(\n        <Grid\n          container\n          key={`grid-container-${i + 1}`}\n        >\n          <FormRow\n            listings={listings.slice(i, i + 3)}\n            props={this.props}\n            columnView={columnView}\n            refresh={() => this.getListings()}\n          />\n        </Grid>\n      );\n    }\n    return rows;\n  }\n\n  handleSortTxt = key => {\n    const { searchTxt, query } = this.state;\n    this.setState({ sortBy: key }, () => this.getListings({\n      ...query,\n      text: searchTxt,\n      sortBy: key\n    }));\n  };\n\n  render() {\n    const classes = this.props.classes;\n    const { listings, columnView } = this.state;\n\n    return (\n      <Paper className={classes.main} elevation={1}>\n        <Grid\n          container\n          direction={'row'}\n          justify={'flex-end'}\n        >\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.addBtnMargin}\n            component={Link}\n            to={'/profile/listings/new'}\n            style={{\n              display: listings.length === 0 ? 'none' : 'flex',\n              width: '200px'\n            }}\n          >\n            <AddIcon className={classes.extendedIcon} />\n            Add Listing\n        </Fab>\n        </Grid>\n        <Grid container style={{ width: '100%' }} >\n          <Typography className={classes.title} variant={'h5'} >Your Listings</Typography>\n          <Grid item lg={12} md={12} sm={12} >\n            {listings.length > 0 ?\n              this.displayListings(listings, columnView) :\n              <div className={classes.profileListings} >\n                <Grid\n                  container\n                  alignItems={'center'}\n                  justify={'center'}\n                  direction={'column'}\n                >\n                  <Typography variant={'display1'} >\n                    You don't have any listings posted\n                </Typography>\n                  <Fab\n                    variant=\"extended\"\n                    color=\"primary\"\n                    aria-label=\"Add\"\n                    className={classes.margin}\n                    component={Link}\n                    to={'/profile/listings/new'}\n                  >\n                    <AddIcon className={classes.extendedIcon} />\n                    Add Listing\n                  </Fab>\n                </Grid>\n              </div>\n            }\n          </Grid>\n        </Grid>\n      </Paper>\n\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(ProfileListings);"]},"metadata":{},"sourceType":"module"}